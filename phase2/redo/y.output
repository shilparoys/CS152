Terminals which are not used

   ELSEIF
   ELSE_PREC
   IF_PREC


Grammar

    0 $accept: prog_start $end

    1 prog_start: /* empty */
    2           | program identifier semicolon block end_program

    3 block: declarations begin_program statements

    4 declarations: declaration semicolon declarations
    5             | /* empty */

    6 declaration: identifier more_idents colon array l_paren number r_paren of integer
    7            | identifier more_idents colon integer

    8 more_idents: COMMA identifier more_idents
    9            | /* empty */

   10 statements: statements statement semicolon
   11           | statement semicolon

   12 statement: Var assign expression
   13          | if bool_exp then ststatement optionalelse end_if
   14          | while bool_exp begin_loop ststatement end_loop
   15          | do begin_loop ststatement end_loop while bool_exp
   16          | read Vars
   17          | write Vars
   18          | continue

   19 Vars: Vars comma Var
   20     | Var

   21 ststatement: statement semicolon ststatement
   22            | /* empty */

   23 optionalelse: else ststatement
   24             | /* empty */

   25 bool_exp: relation_and_exp relationexplist

   26 relation_and_exp: relation_exp andlist

   27 relationexplist: or relation_and_exp relationexplist
   28                | /* empty */

   29 andlist: and relation_exp andlist
   30        | /* empty */

   31 relation_exp: not expression comp expression
   32             | not true
   33             | not false
   34             | not l_paren bool_exp r_paren
   35             | expression comp expression
   36             | true
   37             | false
   38             | l_paren bool_exp r_paren

   39 Var: identifier
   40    | identifier l_paren expression r_paren

   41 expression: multiplicative_exp exprlist

   42 multiplicative_exp: term terms

   43 term: Var
   44     | number
   45     | l_paren expression r_paren
   46     | sub Var
   47     | sub number
   48     | sub l_paren expression r_paren

   49 terms: /* empty */
   50      | terms multiply term
   51      | terms divide term
   52      | terms mod term

   53 exprlist: add multiplicative_exp exprlist
   54         | sub multiplicative_exp exprlist
   55         | /* empty */

   56 program: PROGRAM

   57 identifier: IDENT

   58 semicolon: SEMICOLON

   59 colon: COLON

   60 integer: INTEGER

   61 array: ARRAY

   62 l_paren: L_PAREN

   63 r_paren: R_PAREN

   64 number: NUMBER

   65 of: OF

   66 comma: COMMA

   67 begin_program: BEGIN_PROGRAM

   68 end_program: END_PROGRAM

   69 assign: ASSIGN

   70 if: IF

   71 then: THEN

   72 end_if: ENDIF

   73 else: ELSE

   74 while: WHILE

   75 do: DO

   76 begin_loop: BEGINLOOP

   77 end_loop: ENDLOOP

   78 continue: CONTINUE

   79 read: READ

   80 write: WRITE

   81 and: AND

   82 or: OR

   83 not: NOT

   84 true: TRUE

   85 false: FALSE

   86 sub: SUB

   87 add: ADD

   88 multiply: MULT

   89 divide: DIV

   90 mod: MOD

   91 comp: EQ
   92     | NEQ
   93     | LT
   94     | GT
   95     | LTE
   96     | GTE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 56
BEGIN_PROGRAM (259) 67
END_PROGRAM (260) 68
INTEGER (261) 60
ARRAY (262) 61
OF (263) 65
IF (264) 70
THEN (265) 71
ENDIF (266) 72
ELSE (267) 73
ELSEIF (268)
WHILE (269) 74
DO (270) 75
BEGINLOOP (271) 76
ENDLOOP (272) 77
CONTINUE (273) 78
READ (274) 79
WRITE (275) 80
NOT (276) 83
TRUE (277) 84
FALSE (278) 85
SEMICOLON (279) 58
COLON (280) 59
COMMA (281) 8 66
ASSIGN (282) 69
L_PAREN (283) 62
R_PAREN (284) 63
IDENT (285) 57
NUMBER (286) 64
GTE (287) 96
LTE (288) 95
GT (289) 94
LT (290) 93
NEQ (291) 92
EQ (292) 91
MOD (293) 90
DIV (294) 89
MULT (295) 88
ADD (296) 87
SUB (297) 86
AND (298) 81
OR (299) 82
ELSE_PREC (300)
IF_PREC (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog_start (48)
    on left: 1 2, on right: 0
block (49)
    on left: 3, on right: 2
declarations (50)
    on left: 4 5, on right: 3 4
declaration (51)
    on left: 6 7, on right: 4
more_idents (52)
    on left: 8 9, on right: 6 7 8
statements (53)
    on left: 10 11, on right: 3 10
statement (54)
    on left: 12 13 14 15 16 17 18, on right: 10 11 21
Vars (55)
    on left: 19 20, on right: 16 17 19
ststatement (56)
    on left: 21 22, on right: 13 14 15 21 23
optionalelse (57)
    on left: 23 24, on right: 13
bool_exp (58)
    on left: 25, on right: 13 14 15 34 38
relation_and_exp (59)
    on left: 26, on right: 25 27
relationexplist (60)
    on left: 27 28, on right: 25 27
andlist (61)
    on left: 29 30, on right: 26 29
relation_exp (62)
    on left: 31 32 33 34 35 36 37 38, on right: 26 29
Var (63)
    on left: 39 40, on right: 12 19 20 43 46
expression (64)
    on left: 41, on right: 12 31 35 40 45 48
multiplicative_exp (65)
    on left: 42, on right: 41 53 54
term (66)
    on left: 43 44 45 46 47 48, on right: 42 50 51 52
terms (67)
    on left: 49 50 51 52, on right: 42 50 51 52
exprlist (68)
    on left: 53 54 55, on right: 41 53 54
program (69)
    on left: 56, on right: 2
identifier (70)
    on left: 57, on right: 2 6 7 8 39 40
semicolon (71)
    on left: 58, on right: 2 4 10 11 21
colon (72)
    on left: 59, on right: 6 7
integer (73)
    on left: 60, on right: 6 7
array (74)
    on left: 61, on right: 6
l_paren (75)
    on left: 62, on right: 6 34 38 40 45 48
r_paren (76)
    on left: 63, on right: 6 34 38 40 45 48
number (77)
    on left: 64, on right: 6 44 47
of (78)
    on left: 65, on right: 6
comma (79)
    on left: 66, on right: 19
begin_program (80)
    on left: 67, on right: 3
end_program (81)
    on left: 68, on right: 2
assign (82)
    on left: 69, on right: 12
if (83)
    on left: 70, on right: 13
then (84)
    on left: 71, on right: 13
end_if (85)
    on left: 72, on right: 13
else (86)
    on left: 73, on right: 23
while (87)
    on left: 74, on right: 14 15
do (88)
    on left: 75, on right: 15
begin_loop (89)
    on left: 76, on right: 14 15
end_loop (90)
    on left: 77, on right: 14 15
continue (91)
    on left: 78, on right: 18
read (92)
    on left: 79, on right: 16
write (93)
    on left: 80, on right: 17
and (94)
    on left: 81, on right: 29
or (95)
    on left: 82, on right: 27
not (96)
    on left: 83, on right: 31 32 33 34
true (97)
    on left: 84, on right: 32 36
false (98)
    on left: 85, on right: 33 37
sub (99)
    on left: 86, on right: 46 47 48 54
add (100)
    on left: 87, on right: 53
multiply (101)
    on left: 88, on right: 50
divide (102)
    on left: 89, on right: 51
mod (103)
    on left: 90, on right: 52
comp (104)
    on left: 91 92 93 94 95 96, on right: 31 35


state 0

    0 $accept: . prog_start $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    program     go to state 3


state 1

   56 program: PROGRAM .

    $default  reduce using rule 56 (program)


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 4


state 3

    2 prog_start: program . identifier semicolon block end_program

    IDENT  shift, and go to state 5

    identifier  go to state 6


state 4

    0 $accept: prog_start $end .

    $default  accept


state 5

   57 identifier: IDENT .

    $default  reduce using rule 57 (identifier)


state 6

    2 prog_start: program identifier . semicolon block end_program

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 7

   58 semicolon: SEMICOLON .

    $default  reduce using rule 58 (semicolon)


state 8

    2 prog_start: program identifier semicolon . block end_program

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    block         go to state 9
    declarations  go to state 10
    declaration   go to state 11
    identifier    go to state 12


state 9

    2 prog_start: program identifier semicolon block . end_program

    END_PROGRAM  shift, and go to state 13

    end_program  go to state 14


state 10

    3 block: declarations . begin_program statements

    BEGIN_PROGRAM  shift, and go to state 15

    begin_program  go to state 16


state 11

    4 declarations: declaration . semicolon declarations

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 17


state 12

    6 declaration: identifier . more_idents colon array l_paren number r_paren of integer
    7            | identifier . more_idents colon integer

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (more_idents)

    more_idents  go to state 19


state 13

   68 end_program: END_PROGRAM .

    $default  reduce using rule 68 (end_program)


state 14

    2 prog_start: program identifier semicolon block end_program .

    $default  reduce using rule 2 (prog_start)


state 15

   67 begin_program: BEGIN_PROGRAM .

    $default  reduce using rule 67 (begin_program)


state 16

    3 block: declarations begin_program . statements

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    statements  go to state 26
    statement   go to state 27
    Var         go to state 28
    identifier  go to state 29
    if          go to state 30
    while       go to state 31
    do          go to state 32
    continue    go to state 33
    read        go to state 34
    write       go to state 35


state 17

    4 declarations: declaration semicolon . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 36
    declaration   go to state 11
    identifier    go to state 12


state 18

    8 more_idents: COMMA . identifier more_idents

    IDENT  shift, and go to state 5

    identifier  go to state 37


state 19

    6 declaration: identifier more_idents . colon array l_paren number r_paren of integer
    7            | identifier more_idents . colon integer

    COLON  shift, and go to state 38

    colon  go to state 39


state 20

   70 if: IF .

    $default  reduce using rule 70 (if)


state 21

   74 while: WHILE .

    $default  reduce using rule 74 (while)


state 22

   75 do: DO .

    $default  reduce using rule 75 (do)


state 23

   78 continue: CONTINUE .

    $default  reduce using rule 78 (continue)


state 24

   79 read: READ .

    $default  reduce using rule 79 (read)


state 25

   80 write: WRITE .

    $default  reduce using rule 80 (write)


state 26

    3 block: declarations begin_program statements .
   10 statements: statements . statement semicolon

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 3 (block)

    statement   go to state 40
    Var         go to state 28
    identifier  go to state 29
    if          go to state 30
    while       go to state 31
    do          go to state 32
    continue    go to state 33
    read        go to state 34
    write       go to state 35


state 27

   11 statements: statement . semicolon

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 41


state 28

   12 statement: Var . assign expression

    ASSIGN  shift, and go to state 42

    assign  go to state 43


state 29

   39 Var: identifier .
   40    | identifier . l_paren expression r_paren

    L_PAREN  shift, and go to state 44

    $default  reduce using rule 39 (Var)

    l_paren  go to state 45


state 30

   13 statement: if . bool_exp then ststatement optionalelse end_if

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp            go to state 51
    relation_and_exp    go to state 52
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 55
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 31

   14 statement: while . bool_exp begin_loop ststatement end_loop

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp            go to state 64
    relation_and_exp    go to state 52
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 55
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 32

   15 statement: do . begin_loop ststatement end_loop while bool_exp

    BEGINLOOP  shift, and go to state 65

    begin_loop  go to state 66


state 33

   18 statement: continue .

    $default  reduce using rule 18 (statement)


state 34

   16 statement: read . Vars

    IDENT  shift, and go to state 5

    Vars        go to state 67
    Var         go to state 68
    identifier  go to state 29


state 35

   17 statement: write . Vars

    IDENT  shift, and go to state 5

    Vars        go to state 69
    Var         go to state 68
    identifier  go to state 29


state 36

    4 declarations: declaration semicolon declarations .

    $default  reduce using rule 4 (declarations)


state 37

    8 more_idents: COMMA identifier . more_idents

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (more_idents)

    more_idents  go to state 70


state 38

   59 colon: COLON .

    $default  reduce using rule 59 (colon)


state 39

    6 declaration: identifier more_idents colon . array l_paren number r_paren of integer
    7            | identifier more_idents colon . integer

    INTEGER  shift, and go to state 71
    ARRAY    shift, and go to state 72

    integer  go to state 73
    array    go to state 74


state 40

   10 statements: statements statement . semicolon

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 75


state 41

   11 statements: statement semicolon .

    $default  reduce using rule 11 (statements)


state 42

   69 assign: ASSIGN .

    $default  reduce using rule 69 (assign)


state 43

   12 statement: Var assign . expression

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 76
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 44

   62 l_paren: L_PAREN .

    $default  reduce using rule 62 (l_paren)


state 45

   40 Var: identifier l_paren . expression r_paren

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 78
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 46

   83 not: NOT .

    $default  reduce using rule 83 (not)


state 47

   84 true: TRUE .

    $default  reduce using rule 84 (true)


state 48

   85 false: FALSE .

    $default  reduce using rule 85 (false)


state 49

   64 number: NUMBER .

    $default  reduce using rule 64 (number)


state 50

   86 sub: SUB .

    $default  reduce using rule 86 (sub)


state 51

   13 statement: if bool_exp . then ststatement optionalelse end_if

    THEN  shift, and go to state 79

    then  go to state 80


state 52

   25 bool_exp: relation_and_exp . relationexplist

    OR  shift, and go to state 81

    $default  reduce using rule 28 (relationexplist)

    relationexplist  go to state 82
    or               go to state 83


state 53

   26 relation_and_exp: relation_exp . andlist

    AND  shift, and go to state 84

    $default  reduce using rule 30 (andlist)

    andlist  go to state 85
    and      go to state 86


state 54

   43 term: Var .

    $default  reduce using rule 43 (term)


state 55

   35 relation_exp: expression . comp expression

    GTE  shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    NEQ  shift, and go to state 91
    EQ   shift, and go to state 92

    comp  go to state 93


state 56

   41 expression: multiplicative_exp . exprlist

    ADD  shift, and go to state 94
    SUB  shift, and go to state 50

    $default  reduce using rule 55 (exprlist)

    exprlist  go to state 95
    sub       go to state 96
    add       go to state 97


state 57

   42 multiplicative_exp: term . terms

    $default  reduce using rule 49 (terms)

    terms  go to state 98


state 58

   38 relation_exp: l_paren . bool_exp r_paren
   45 term: l_paren . expression r_paren

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp            go to state 99
    relation_and_exp    go to state 52
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 100
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 59

   44 term: number .

    $default  reduce using rule 44 (term)


state 60

   31 relation_exp: not . expression comp expression
   32             | not . true
   33             | not . false
   34             | not . l_paren bool_exp r_paren

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 101
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 102
    number              go to state 59
    true                go to state 103
    false               go to state 104
    sub                 go to state 63


state 61

   36 relation_exp: true .

    $default  reduce using rule 36 (relation_exp)


state 62

   37 relation_exp: false .

    $default  reduce using rule 37 (relation_exp)


state 63

   46 term: sub . Var
   47     | sub . number
   48     | sub . l_paren expression r_paren

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49

    Var         go to state 105
    identifier  go to state 29
    l_paren     go to state 106
    number      go to state 107


state 64

   14 statement: while bool_exp . begin_loop ststatement end_loop

    BEGINLOOP  shift, and go to state 65

    begin_loop  go to state 108


state 65

   76 begin_loop: BEGINLOOP .

    $default  reduce using rule 76 (begin_loop)


state 66

   15 statement: do begin_loop . ststatement end_loop while bool_exp

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (ststatement)

    statement    go to state 109
    ststatement  go to state 110
    Var          go to state 28
    identifier   go to state 29
    if           go to state 30
    while        go to state 31
    do           go to state 32
    continue     go to state 33
    read         go to state 34
    write        go to state 35


state 67

   16 statement: read Vars .
   19 Vars: Vars . comma Var

    COMMA  shift, and go to state 111

    $default  reduce using rule 16 (statement)

    comma  go to state 112


state 68

   20 Vars: Var .

    $default  reduce using rule 20 (Vars)


state 69

   17 statement: write Vars .
   19 Vars: Vars . comma Var

    COMMA  shift, and go to state 111

    $default  reduce using rule 17 (statement)

    comma  go to state 112


state 70

    8 more_idents: COMMA identifier more_idents .

    $default  reduce using rule 8 (more_idents)


state 71

   60 integer: INTEGER .

    $default  reduce using rule 60 (integer)


state 72

   61 array: ARRAY .

    $default  reduce using rule 61 (array)


state 73

    7 declaration: identifier more_idents colon integer .

    $default  reduce using rule 7 (declaration)


state 74

    6 declaration: identifier more_idents colon array . l_paren number r_paren of integer

    L_PAREN  shift, and go to state 44

    l_paren  go to state 113


state 75

   10 statements: statements statement semicolon .

    $default  reduce using rule 10 (statements)


state 76

   12 statement: Var assign expression .

    $default  reduce using rule 12 (statement)


state 77

   45 term: l_paren . expression r_paren

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 114
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 78

   40 Var: identifier l_paren expression . r_paren

    R_PAREN  shift, and go to state 115

    r_paren  go to state 116


state 79

   71 then: THEN .

    $default  reduce using rule 71 (then)


state 80

   13 statement: if bool_exp then . ststatement optionalelse end_if

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (ststatement)

    statement    go to state 109
    ststatement  go to state 117
    Var          go to state 28
    identifier   go to state 29
    if           go to state 30
    while        go to state 31
    do           go to state 32
    continue     go to state 33
    read         go to state 34
    write        go to state 35


state 81

   82 or: OR .

    $default  reduce using rule 82 (or)


state 82

   25 bool_exp: relation_and_exp relationexplist .

    $default  reduce using rule 25 (bool_exp)


state 83

   27 relationexplist: or . relation_and_exp relationexplist

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    relation_and_exp    go to state 118
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 55
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 84

   81 and: AND .

    $default  reduce using rule 81 (and)


state 85

   26 relation_and_exp: relation_exp andlist .

    $default  reduce using rule 26 (relation_and_exp)


state 86

   29 andlist: and . relation_exp andlist

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    relation_exp        go to state 119
    Var                 go to state 54
    expression          go to state 55
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 87

   96 comp: GTE .

    $default  reduce using rule 96 (comp)


state 88

   95 comp: LTE .

    $default  reduce using rule 95 (comp)


state 89

   94 comp: GT .

    $default  reduce using rule 94 (comp)


state 90

   93 comp: LT .

    $default  reduce using rule 93 (comp)


state 91

   92 comp: NEQ .

    $default  reduce using rule 92 (comp)


state 92

   91 comp: EQ .

    $default  reduce using rule 91 (comp)


state 93

   35 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 120
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 94

   87 add: ADD .

    $default  reduce using rule 87 (add)


state 95

   41 expression: multiplicative_exp exprlist .

    $default  reduce using rule 41 (expression)


state 96

   54 exprlist: sub . multiplicative_exp exprlist

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    multiplicative_exp  go to state 121
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 97

   53 exprlist: add . multiplicative_exp exprlist

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    multiplicative_exp  go to state 122
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 98

   42 multiplicative_exp: term terms .
   50 terms: terms . multiply term
   51      | terms . divide term
   52      | terms . mod term

    MOD   shift, and go to state 123
    DIV   shift, and go to state 124
    MULT  shift, and go to state 125

    $default  reduce using rule 42 (multiplicative_exp)

    multiply  go to state 126
    divide    go to state 127
    mod       go to state 128


state 99

   38 relation_exp: l_paren bool_exp . r_paren

    R_PAREN  shift, and go to state 115

    r_paren  go to state 129


state 100

   35 relation_exp: expression . comp expression
   45 term: l_paren expression . r_paren

    R_PAREN  shift, and go to state 115
    GTE      shift, and go to state 87
    LTE      shift, and go to state 88
    GT       shift, and go to state 89
    LT       shift, and go to state 90
    NEQ      shift, and go to state 91
    EQ       shift, and go to state 92

    r_paren  go to state 130
    comp     go to state 93


state 101

   31 relation_exp: not expression . comp expression

    GTE  shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    LT   shift, and go to state 90
    NEQ  shift, and go to state 91
    EQ   shift, and go to state 92

    comp  go to state 131


state 102

   34 relation_exp: not l_paren . bool_exp r_paren
   45 term: l_paren . expression r_paren

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp            go to state 132
    relation_and_exp    go to state 52
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 100
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 103

   32 relation_exp: not true .

    $default  reduce using rule 32 (relation_exp)


state 104

   33 relation_exp: not false .

    $default  reduce using rule 33 (relation_exp)


state 105

   46 term: sub Var .

    $default  reduce using rule 46 (term)


state 106

   48 term: sub l_paren . expression r_paren

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 133
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 107

   47 term: sub number .

    $default  reduce using rule 47 (term)


state 108

   14 statement: while bool_exp begin_loop . ststatement end_loop

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (ststatement)

    statement    go to state 109
    ststatement  go to state 134
    Var          go to state 28
    identifier   go to state 29
    if           go to state 30
    while        go to state 31
    do           go to state 32
    continue     go to state 33
    read         go to state 34
    write        go to state 35


state 109

   21 ststatement: statement . semicolon ststatement

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 135


state 110

   15 statement: do begin_loop ststatement . end_loop while bool_exp

    ENDLOOP  shift, and go to state 136

    end_loop  go to state 137


state 111

   66 comma: COMMA .

    $default  reduce using rule 66 (comma)


state 112

   19 Vars: Vars comma . Var

    IDENT  shift, and go to state 5

    Var         go to state 138
    identifier  go to state 29


state 113

    6 declaration: identifier more_idents colon array l_paren . number r_paren of integer

    NUMBER  shift, and go to state 49

    number  go to state 139


state 114

   45 term: l_paren expression . r_paren

    R_PAREN  shift, and go to state 115

    r_paren  go to state 130


state 115

   63 r_paren: R_PAREN .

    $default  reduce using rule 63 (r_paren)


state 116

   40 Var: identifier l_paren expression r_paren .

    $default  reduce using rule 40 (Var)


state 117

   13 statement: if bool_exp then ststatement . optionalelse end_if

    ELSE  shift, and go to state 140

    $default  reduce using rule 24 (optionalelse)

    optionalelse  go to state 141
    else          go to state 142


state 118

   27 relationexplist: or relation_and_exp . relationexplist

    OR  shift, and go to state 81

    $default  reduce using rule 28 (relationexplist)

    relationexplist  go to state 143
    or               go to state 83


state 119

   29 andlist: and relation_exp . andlist

    AND  shift, and go to state 84

    $default  reduce using rule 30 (andlist)

    andlist  go to state 144
    and      go to state 86


state 120

   35 relation_exp: expression comp expression .

    $default  reduce using rule 35 (relation_exp)


state 121

   54 exprlist: sub multiplicative_exp . exprlist

    ADD  shift, and go to state 94
    SUB  shift, and go to state 50

    $default  reduce using rule 55 (exprlist)

    exprlist  go to state 145
    sub       go to state 96
    add       go to state 97


state 122

   53 exprlist: add multiplicative_exp . exprlist

    ADD  shift, and go to state 94
    SUB  shift, and go to state 50

    $default  reduce using rule 55 (exprlist)

    exprlist  go to state 146
    sub       go to state 96
    add       go to state 97


state 123

   90 mod: MOD .

    $default  reduce using rule 90 (mod)


state 124

   89 divide: DIV .

    $default  reduce using rule 89 (divide)


state 125

   88 multiply: MULT .

    $default  reduce using rule 88 (multiply)


state 126

   50 terms: terms multiply . term

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var         go to state 54
    term        go to state 147
    identifier  go to state 29
    l_paren     go to state 77
    number      go to state 59
    sub         go to state 63


state 127

   51 terms: terms divide . term

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var         go to state 54
    term        go to state 148
    identifier  go to state 29
    l_paren     go to state 77
    number      go to state 59
    sub         go to state 63


state 128

   52 terms: terms mod . term

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var         go to state 54
    term        go to state 149
    identifier  go to state 29
    l_paren     go to state 77
    number      go to state 59
    sub         go to state 63


state 129

   38 relation_exp: l_paren bool_exp r_paren .

    $default  reduce using rule 38 (relation_exp)


state 130

   45 term: l_paren expression r_paren .

    $default  reduce using rule 45 (term)


state 131

   31 relation_exp: not expression comp . expression

    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    Var                 go to state 54
    expression          go to state 150
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 77
    number              go to state 59
    sub                 go to state 63


state 132

   34 relation_exp: not l_paren bool_exp . r_paren

    R_PAREN  shift, and go to state 115

    r_paren  go to state 151


state 133

   48 term: sub l_paren expression . r_paren

    R_PAREN  shift, and go to state 115

    r_paren  go to state 152


state 134

   14 statement: while bool_exp begin_loop ststatement . end_loop

    ENDLOOP  shift, and go to state 136

    end_loop  go to state 153


state 135

   21 ststatement: statement semicolon . ststatement

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (ststatement)

    statement    go to state 109
    ststatement  go to state 154
    Var          go to state 28
    identifier   go to state 29
    if           go to state 30
    while        go to state 31
    do           go to state 32
    continue     go to state 33
    read         go to state 34
    write        go to state 35


state 136

   77 end_loop: ENDLOOP .

    $default  reduce using rule 77 (end_loop)


state 137

   15 statement: do begin_loop ststatement end_loop . while bool_exp

    WHILE  shift, and go to state 21

    while  go to state 155


state 138

   19 Vars: Vars comma Var .

    $default  reduce using rule 19 (Vars)


state 139

    6 declaration: identifier more_idents colon array l_paren number . r_paren of integer

    R_PAREN  shift, and go to state 115

    r_paren  go to state 156


state 140

   73 else: ELSE .

    $default  reduce using rule 73 (else)


state 141

   13 statement: if bool_exp then ststatement optionalelse . end_if

    ENDIF  shift, and go to state 157

    end_if  go to state 158


state 142

   23 optionalelse: else . ststatement

    IF        shift, and go to state 20
    WHILE     shift, and go to state 21
    DO        shift, and go to state 22
    CONTINUE  shift, and go to state 23
    READ      shift, and go to state 24
    WRITE     shift, and go to state 25
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (ststatement)

    statement    go to state 109
    ststatement  go to state 159
    Var          go to state 28
    identifier   go to state 29
    if           go to state 30
    while        go to state 31
    do           go to state 32
    continue     go to state 33
    read         go to state 34
    write        go to state 35


state 143

   27 relationexplist: or relation_and_exp relationexplist .

    $default  reduce using rule 27 (relationexplist)


state 144

   29 andlist: and relation_exp andlist .

    $default  reduce using rule 29 (andlist)


state 145

   54 exprlist: sub multiplicative_exp exprlist .

    $default  reduce using rule 54 (exprlist)


state 146

   53 exprlist: add multiplicative_exp exprlist .

    $default  reduce using rule 53 (exprlist)


state 147

   50 terms: terms multiply term .

    $default  reduce using rule 50 (terms)


state 148

   51 terms: terms divide term .

    $default  reduce using rule 51 (terms)


state 149

   52 terms: terms mod term .

    $default  reduce using rule 52 (terms)


state 150

   31 relation_exp: not expression comp expression .

    $default  reduce using rule 31 (relation_exp)


state 151

   34 relation_exp: not l_paren bool_exp r_paren .

    $default  reduce using rule 34 (relation_exp)


state 152

   48 term: sub l_paren expression r_paren .

    $default  reduce using rule 48 (term)


state 153

   14 statement: while bool_exp begin_loop ststatement end_loop .

    $default  reduce using rule 14 (statement)


state 154

   21 ststatement: statement semicolon ststatement .

    $default  reduce using rule 21 (ststatement)


state 155

   15 statement: do begin_loop ststatement end_loop while . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 44
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp            go to state 160
    relation_and_exp    go to state 52
    relation_exp        go to state 53
    Var                 go to state 54
    expression          go to state 55
    multiplicative_exp  go to state 56
    term                go to state 57
    identifier          go to state 29
    l_paren             go to state 58
    number              go to state 59
    not                 go to state 60
    true                go to state 61
    false               go to state 62
    sub                 go to state 63


state 156

    6 declaration: identifier more_idents colon array l_paren number r_paren . of integer

    OF  shift, and go to state 161

    of  go to state 162


state 157

   72 end_if: ENDIF .

    $default  reduce using rule 72 (end_if)


state 158

   13 statement: if bool_exp then ststatement optionalelse end_if .

    $default  reduce using rule 13 (statement)


state 159

   23 optionalelse: else ststatement .

    $default  reduce using rule 23 (optionalelse)


state 160

   15 statement: do begin_loop ststatement end_loop while bool_exp .

    $default  reduce using rule 15 (statement)


state 161

   65 of: OF .

    $default  reduce using rule 65 (of)


state 162

    6 declaration: identifier more_idents colon array l_paren number r_paren of . integer

    INTEGER  shift, and go to state 71

    integer  go to state 163


state 163

    6 declaration: identifier more_idents colon array l_paren number r_paren of integer .

    $default  reduce using rule 6 (declaration)
