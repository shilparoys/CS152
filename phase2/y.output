Terminals which are not used

   ELSEIF
   BREAK
   END
   EXIT
   NOT
   TRUE
   FALSE
   QUESTION
   L_BRACKET
   R_BRACKET
   GTE
   LTE
   GT
   LT
   NEQ
   EQ
   AND
   OR
   ELSE_PREC
   IF_PREC


State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce


Grammar

    0 $accept: program_start $end

    1 program_start: /* empty */
    2              | program identifier semicolon block endprogram

    3 program: PROGRAM

    4 identifier: IDENT

    5 semicolon: SEMICOLON

    6 block: declarations beginprogram statements

    7 beginprogram: BEGIN_PROGRAM

    8 statements: statement semicolon statements
    9           | /* empty */

   10 statement: continue
   11          | write Vars
   12          | read Vars
   13          | do beginloop statements1 endloop while bool_exp
   14          | while bool_exp beginloop statements1 endloop
   15          | if bool_exp then statements1 elseOption endif
   16          | Vars assign expression

   17 if: IF

   18 then: THEN

   19 elseOption: else statements1
   20           | /* empty */

   21 else: ELSE

   22 endif: ENDIF

   23 assign: ASSIGN

   24 expression: multplicative_exp moreMultExp

   25 multplicative_exp: term terms

   26 term: minus Vars
   27     | minus number
   28     | minus left_paren expression right_paren
   29     | Vars
   30     | number
   31     | left_paren expression right_paren

   32 terms: mult term
   33      | div term
   34      | mod term

   35 mult: MULT

   36 div: DIV

   37 mod: MOD

   38 moreMultExp: plus multplicative_exp
   39            | minus multplicative_exp
   40            | /* empty */

   41 plus: ADD

   42 minus: SUB

   43 do: DO

   44 beginloop: BEGINLOOP

   45 statements1: /* empty */

   46 endloop: ENDLOOP

   47 while: WHILE

   48 bool_exp: /* empty */

   49 write: WRITE

   50 read: READ

   51 Vars: /* empty */

   52 continue: CONTINUE

   53 endprogram: END_PROGRAM

   54 declarations: declaration semicolon declarations
   55             | /* empty */

   56 declaration: identifier identMore colon array left_paren number right_paren of integer
   57            | identifier identMore colon integer

   58 identMore: comma identMore
   59          | /* empty */

   60 colon: COLON

   61 array: ARRAY

   62 left_paren: L_PAREN

   63 number: NUMBER

   64 right_paren: R_PAREN

   65 of: OF

   66 integer: INTEGER

   67 comma: COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
BEGIN_PROGRAM (259) 7
END_PROGRAM (260) 53
INTEGER (261) 66
ARRAY (262) 61
OF (263) 65
IF (264) 17
THEN (265) 18
ELSE (266) 21
ENDIF (267) 22
ELSEIF (268)
WHILE (269) 47
DO (270) 43
BEGINLOOP (271) 44
ENDLOOP (272) 46
BREAK (273)
CONTINUE (274) 52
END (275)
EXIT (276)
READ (277) 50
WRITE (278) 49
NOT (279)
TRUE (280)
FALSE (281)
SEMICOLON (282) 5
COLON (283) 60
COMMA (284) 67
QUESTION (285)
L_BRACKET (286)
R_BRACKET (287)
ASSIGN (288) 23
NUMBER (289) 63
IDENT (290) 4
R_PAREN (291) 64
L_PAREN (292) 62
GTE (293)
LTE (294)
GT (295)
LT (296)
NEQ (297)
EQ (298)
MOD (299) 37
DIV (300) 36
MULT (301) 35
ADD (302) 41
SUB (303) 42
AND (304)
OR (305)
ELSE_PREC (306)
IF_PREC (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program_start (54)
    on left: 1 2, on right: 0
program (55)
    on left: 3, on right: 2
identifier (56)
    on left: 4, on right: 2 56 57
semicolon (57)
    on left: 5, on right: 2 8 54
block (58)
    on left: 6, on right: 2
beginprogram (59)
    on left: 7, on right: 6
statements (60)
    on left: 8 9, on right: 6 8
statement (61)
    on left: 10 11 12 13 14 15 16, on right: 8
if (62)
    on left: 17, on right: 15
then (63)
    on left: 18, on right: 15
elseOption (64)
    on left: 19 20, on right: 15
else (65)
    on left: 21, on right: 19
endif (66)
    on left: 22, on right: 15
assign (67)
    on left: 23, on right: 16
expression (68)
    on left: 24, on right: 16 28 31
multplicative_exp (69)
    on left: 25, on right: 24 38 39
term (70)
    on left: 26 27 28 29 30 31, on right: 25 32 33 34
terms (71)
    on left: 32 33 34, on right: 25
mult (72)
    on left: 35, on right: 32
div (73)
    on left: 36, on right: 33
mod (74)
    on left: 37, on right: 34
moreMultExp (75)
    on left: 38 39 40, on right: 24
plus (76)
    on left: 41, on right: 38
minus (77)
    on left: 42, on right: 26 27 28 39
do (78)
    on left: 43, on right: 13
beginloop (79)
    on left: 44, on right: 13 14
statements1 (80)
    on left: 45, on right: 13 14 15 19
endloop (81)
    on left: 46, on right: 13 14
while (82)
    on left: 47, on right: 13 14
bool_exp (83)
    on left: 48, on right: 13 14 15
write (84)
    on left: 49, on right: 11
read (85)
    on left: 50, on right: 12
Vars (86)
    on left: 51, on right: 11 12 16 26 29
continue (87)
    on left: 52, on right: 10
endprogram (88)
    on left: 53, on right: 2
declarations (89)
    on left: 54 55, on right: 6 54
declaration (90)
    on left: 56 57, on right: 54
identMore (91)
    on left: 58 59, on right: 56 57 58
colon (92)
    on left: 60, on right: 56 57
array (93)
    on left: 61, on right: 56
left_paren (94)
    on left: 62, on right: 28 31 56
number (95)
    on left: 63, on right: 27 30 56
right_paren (96)
    on left: 64, on right: 28 31 56
of (97)
    on left: 65, on right: 56
integer (98)
    on left: 66, on right: 56 57
comma (99)
    on left: 67, on right: 58


state 0

    0 $accept: . program_start $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 1 (program_start)

    program_start  go to state 2
    program        go to state 3


state 1

    3 program: PROGRAM .

    $default  reduce using rule 3 (program)


state 2

    0 $accept: program_start . $end

    $end  shift, and go to state 4


state 3

    2 program_start: program . identifier semicolon block endprogram

    IDENT  shift, and go to state 5

    identifier  go to state 6


state 4

    0 $accept: program_start $end .

    $default  accept


state 5

    4 identifier: IDENT .

    $default  reduce using rule 4 (identifier)


state 6

    2 program_start: program identifier . semicolon block endprogram

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 7

    5 semicolon: SEMICOLON .

    $default  reduce using rule 5 (semicolon)


state 8

    2 program_start: program identifier semicolon . block endprogram

    IDENT  shift, and go to state 5

    $default  reduce using rule 55 (declarations)

    identifier    go to state 9
    block         go to state 10
    declarations  go to state 11
    declaration   go to state 12


state 9

   56 declaration: identifier . identMore colon array left_paren number right_paren of integer
   57            | identifier . identMore colon integer

    COMMA  shift, and go to state 13

    $default  reduce using rule 59 (identMore)

    identMore  go to state 14
    comma      go to state 15


state 10

    2 program_start: program identifier semicolon block . endprogram

    END_PROGRAM  shift, and go to state 16

    endprogram  go to state 17


state 11

    6 block: declarations . beginprogram statements

    BEGIN_PROGRAM  shift, and go to state 18

    beginprogram  go to state 19


state 12

   54 declarations: declaration . semicolon declarations

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 20


state 13

   67 comma: COMMA .

    $default  reduce using rule 67 (comma)


state 14

   56 declaration: identifier identMore . colon array left_paren number right_paren of integer
   57            | identifier identMore . colon integer

    COLON  shift, and go to state 21

    colon  go to state 22


state 15

   58 identMore: comma . identMore

    COMMA  shift, and go to state 13

    $default  reduce using rule 59 (identMore)

    identMore  go to state 23
    comma      go to state 15


state 16

   53 endprogram: END_PROGRAM .

    $default  reduce using rule 53 (endprogram)


state 17

    2 program_start: program identifier semicolon block endprogram .

    $default  reduce using rule 2 (program_start)


state 18

    7 beginprogram: BEGIN_PROGRAM .

    $default  reduce using rule 7 (beginprogram)


state 19

    6 block: declarations beginprogram . statements

    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    READ      shift, and go to state 28
    WRITE     shift, and go to state 29

    ASSIGN    reduce using rule 51 (Vars)
    $default  reduce using rule 9 (statements)

    statements  go to state 30
    statement   go to state 31
    if          go to state 32
    do          go to state 33
    while       go to state 34
    write       go to state 35
    read        go to state 36
    Vars        go to state 37
    continue    go to state 38


state 20

   54 declarations: declaration semicolon . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 55 (declarations)

    identifier    go to state 9
    declarations  go to state 39
    declaration   go to state 12


state 21

   60 colon: COLON .

    $default  reduce using rule 60 (colon)


state 22

   56 declaration: identifier identMore colon . array left_paren number right_paren of integer
   57            | identifier identMore colon . integer

    INTEGER  shift, and go to state 40
    ARRAY    shift, and go to state 41

    array    go to state 42
    integer  go to state 43


state 23

   58 identMore: comma identMore .

    $default  reduce using rule 58 (identMore)


state 24

   17 if: IF .

    $default  reduce using rule 17 (if)


state 25

   47 while: WHILE .

    $default  reduce using rule 47 (while)


state 26

   43 do: DO .

    $default  reduce using rule 43 (do)


state 27

   52 continue: CONTINUE .

    $default  reduce using rule 52 (continue)


state 28

   50 read: READ .

    $default  reduce using rule 50 (read)


state 29

   49 write: WRITE .

    $default  reduce using rule 49 (write)


state 30

    6 block: declarations beginprogram statements .

    $default  reduce using rule 6 (block)


state 31

    8 statements: statement . semicolon statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 44


state 32

   15 statement: if . bool_exp then statements1 elseOption endif

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 45


state 33

   13 statement: do . beginloop statements1 endloop while bool_exp

    BEGINLOOP  shift, and go to state 46

    beginloop  go to state 47


state 34

   14 statement: while . bool_exp beginloop statements1 endloop

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 48


state 35

   11 statement: write . Vars

    $default  reduce using rule 51 (Vars)

    Vars  go to state 49


state 36

   12 statement: read . Vars

    $default  reduce using rule 51 (Vars)

    Vars  go to state 50


state 37

   16 statement: Vars . assign expression

    ASSIGN  shift, and go to state 51

    assign  go to state 52


state 38

   10 statement: continue .

    $default  reduce using rule 10 (statement)


state 39

   54 declarations: declaration semicolon declarations .

    $default  reduce using rule 54 (declarations)


state 40

   66 integer: INTEGER .

    $default  reduce using rule 66 (integer)


state 41

   61 array: ARRAY .

    $default  reduce using rule 61 (array)


state 42

   56 declaration: identifier identMore colon array . left_paren number right_paren of integer

    L_PAREN  shift, and go to state 53

    left_paren  go to state 54


state 43

   57 declaration: identifier identMore colon integer .

    $default  reduce using rule 57 (declaration)


state 44

    8 statements: statement semicolon . statements

    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    READ      shift, and go to state 28
    WRITE     shift, and go to state 29

    ASSIGN    reduce using rule 51 (Vars)
    $default  reduce using rule 9 (statements)

    statements  go to state 55
    statement   go to state 31
    if          go to state 32
    do          go to state 33
    while       go to state 34
    write       go to state 35
    read        go to state 36
    Vars        go to state 37
    continue    go to state 38


state 45

   15 statement: if bool_exp . then statements1 elseOption endif

    THEN  shift, and go to state 56

    then  go to state 57


state 46

   44 beginloop: BEGINLOOP .

    $default  reduce using rule 44 (beginloop)


state 47

   13 statement: do beginloop . statements1 endloop while bool_exp

    $default  reduce using rule 45 (statements1)

    statements1  go to state 58


state 48

   14 statement: while bool_exp . beginloop statements1 endloop

    BEGINLOOP  shift, and go to state 46

    beginloop  go to state 59


state 49

   11 statement: write Vars .

    $default  reduce using rule 11 (statement)


state 50

   12 statement: read Vars .

    $default  reduce using rule 12 (statement)


state 51

   23 assign: ASSIGN .

    $default  reduce using rule 23 (assign)


state 52

   16 statement: Vars assign . expression

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    $default  reduce using rule 51 (Vars)

    expression         go to state 62
    multplicative_exp  go to state 63
    term               go to state 64
    minus              go to state 65
    Vars               go to state 66
    left_paren         go to state 67
    number             go to state 68


state 53

   62 left_paren: L_PAREN .

    $default  reduce using rule 62 (left_paren)


state 54

   56 declaration: identifier identMore colon array left_paren . number right_paren of integer

    NUMBER  shift, and go to state 60

    number  go to state 69


state 55

    8 statements: statement semicolon statements .

    $default  reduce using rule 8 (statements)


state 56

   18 then: THEN .

    $default  reduce using rule 18 (then)


state 57

   15 statement: if bool_exp then . statements1 elseOption endif

    $default  reduce using rule 45 (statements1)

    statements1  go to state 70


state 58

   13 statement: do beginloop statements1 . endloop while bool_exp

    ENDLOOP  shift, and go to state 71

    endloop  go to state 72


state 59

   14 statement: while bool_exp beginloop . statements1 endloop

    $default  reduce using rule 45 (statements1)

    statements1  go to state 73


state 60

   63 number: NUMBER .

    $default  reduce using rule 63 (number)


state 61

   42 minus: SUB .

    $default  reduce using rule 42 (minus)


state 62

   16 statement: Vars assign expression .

    $default  reduce using rule 16 (statement)


state 63

   24 expression: multplicative_exp . moreMultExp

    ADD  shift, and go to state 74
    SUB  shift, and go to state 61

    $default  reduce using rule 40 (moreMultExp)

    moreMultExp  go to state 75
    plus         go to state 76
    minus        go to state 77


state 64

   25 multplicative_exp: term . terms

    MOD   shift, and go to state 78
    DIV   shift, and go to state 79
    MULT  shift, and go to state 80

    terms  go to state 81
    mult   go to state 82
    div    go to state 83
    mod    go to state 84


state 65

   26 term: minus . Vars
   27     | minus . number
   28     | minus . left_paren expression right_paren

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53

    $default  reduce using rule 51 (Vars)

    Vars        go to state 85
    left_paren  go to state 86
    number      go to state 87


state 66

   29 term: Vars .

    $default  reduce using rule 29 (term)


state 67

   31 term: left_paren . expression right_paren

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    $default  reduce using rule 51 (Vars)

    expression         go to state 88
    multplicative_exp  go to state 63
    term               go to state 64
    minus              go to state 65
    Vars               go to state 66
    left_paren         go to state 67
    number             go to state 68


state 68

   30 term: number .

    $default  reduce using rule 30 (term)


state 69

   56 declaration: identifier identMore colon array left_paren number . right_paren of integer

    R_PAREN  shift, and go to state 89

    right_paren  go to state 90


state 70

   15 statement: if bool_exp then statements1 . elseOption endif

    ELSE  shift, and go to state 91

    $default  reduce using rule 20 (elseOption)

    elseOption  go to state 92
    else        go to state 93


state 71

   46 endloop: ENDLOOP .

    $default  reduce using rule 46 (endloop)


state 72

   13 statement: do beginloop statements1 endloop . while bool_exp

    WHILE  shift, and go to state 25

    while  go to state 94


state 73

   14 statement: while bool_exp beginloop statements1 . endloop

    ENDLOOP  shift, and go to state 71

    endloop  go to state 95


state 74

   41 plus: ADD .

    $default  reduce using rule 41 (plus)


state 75

   24 expression: multplicative_exp moreMultExp .

    $default  reduce using rule 24 (expression)


state 76

   38 moreMultExp: plus . multplicative_exp

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    $default  reduce using rule 51 (Vars)

    multplicative_exp  go to state 96
    term               go to state 64
    minus              go to state 65
    Vars               go to state 66
    left_paren         go to state 67
    number             go to state 68


state 77

   39 moreMultExp: minus . multplicative_exp

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    $default  reduce using rule 51 (Vars)

    multplicative_exp  go to state 97
    term               go to state 64
    minus              go to state 65
    Vars               go to state 66
    left_paren         go to state 67
    number             go to state 68


state 78

   37 mod: MOD .

    $default  reduce using rule 37 (mod)


state 79

   36 div: DIV .

    $default  reduce using rule 36 (div)


state 80

   35 mult: MULT .

    $default  reduce using rule 35 (mult)


state 81

   25 multplicative_exp: term terms .

    $default  reduce using rule 25 (multplicative_exp)


state 82

   32 terms: mult . term

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    SUB       [reduce using rule 51 (Vars)]
    $default  reduce using rule 51 (Vars)

    term        go to state 98
    minus       go to state 65
    Vars        go to state 66
    left_paren  go to state 67
    number      go to state 68


state 83

   33 terms: div . term

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    SUB       [reduce using rule 51 (Vars)]
    $default  reduce using rule 51 (Vars)

    term        go to state 99
    minus       go to state 65
    Vars        go to state 66
    left_paren  go to state 67
    number      go to state 68


state 84

   34 terms: mod . term

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    SUB       [reduce using rule 51 (Vars)]
    $default  reduce using rule 51 (Vars)

    term        go to state 100
    minus       go to state 65
    Vars        go to state 66
    left_paren  go to state 67
    number      go to state 68


state 85

   26 term: minus Vars .

    $default  reduce using rule 26 (term)


state 86

   28 term: minus left_paren . expression right_paren

    NUMBER   shift, and go to state 60
    L_PAREN  shift, and go to state 53
    SUB      shift, and go to state 61

    $default  reduce using rule 51 (Vars)

    expression         go to state 101
    multplicative_exp  go to state 63
    term               go to state 64
    minus              go to state 65
    Vars               go to state 66
    left_paren         go to state 67
    number             go to state 68


state 87

   27 term: minus number .

    $default  reduce using rule 27 (term)


state 88

   31 term: left_paren expression . right_paren

    R_PAREN  shift, and go to state 89

    right_paren  go to state 102


state 89

   64 right_paren: R_PAREN .

    $default  reduce using rule 64 (right_paren)


state 90

   56 declaration: identifier identMore colon array left_paren number right_paren . of integer

    OF  shift, and go to state 103

    of  go to state 104


state 91

   21 else: ELSE .

    $default  reduce using rule 21 (else)


state 92

   15 statement: if bool_exp then statements1 elseOption . endif

    ENDIF  shift, and go to state 105

    endif  go to state 106


state 93

   19 elseOption: else . statements1

    $default  reduce using rule 45 (statements1)

    statements1  go to state 107


state 94

   13 statement: do beginloop statements1 endloop while . bool_exp

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 108


state 95

   14 statement: while bool_exp beginloop statements1 endloop .

    $default  reduce using rule 14 (statement)


state 96

   38 moreMultExp: plus multplicative_exp .

    $default  reduce using rule 38 (moreMultExp)


state 97

   39 moreMultExp: minus multplicative_exp .

    $default  reduce using rule 39 (moreMultExp)


state 98

   32 terms: mult term .

    $default  reduce using rule 32 (terms)


state 99

   33 terms: div term .

    $default  reduce using rule 33 (terms)


state 100

   34 terms: mod term .

    $default  reduce using rule 34 (terms)


state 101

   28 term: minus left_paren expression . right_paren

    R_PAREN  shift, and go to state 89

    right_paren  go to state 109


state 102

   31 term: left_paren expression right_paren .

    $default  reduce using rule 31 (term)


state 103

   65 of: OF .

    $default  reduce using rule 65 (of)


state 104

   56 declaration: identifier identMore colon array left_paren number right_paren of . integer

    INTEGER  shift, and go to state 40

    integer  go to state 110


state 105

   22 endif: ENDIF .

    $default  reduce using rule 22 (endif)


state 106

   15 statement: if bool_exp then statements1 elseOption endif .

    $default  reduce using rule 15 (statement)


state 107

   19 elseOption: else statements1 .

    $default  reduce using rule 19 (elseOption)


state 108

   13 statement: do beginloop statements1 endloop while bool_exp .

    $default  reduce using rule 13 (statement)


state 109

   28 term: minus left_paren expression right_paren .

    $default  reduce using rule 28 (term)


state 110

   56 declaration: identifier identMore colon array left_paren number right_paren of integer .

    $default  reduce using rule 56 (declaration)
