Terminals which are not used

   ELSEIF
   BREAK
   END
   EXIT
   NOT
   TRUE
   FALSE
   QUESTION
   L_BRACKET
   R_BRACKET
   GTE
   LTE
   GT
   LT
   NEQ
   EQ
   AND
   OR
   ELSE_PREC
   IF_PREC


Grammar

    0 $accept: program_start $end

    1 program_start: /* empty */
    2              | program identifier semicolon block endprogram

    3 program: PROGRAM

    4 identifier: IDENT

    5 semicolon: SEMICOLON

    6 block: declarations beginprogram statements

    7 beginprogram: BEGIN_PROGRAM

    8 statements: statement semicolon statements
    9           | /* empty */

   10 statement: continue
   11          | write Vars
   12          | read Vars
   13          | do beginloop statements1 endloop while bool_exp
   14          | while bool_exp beginloop statements1 endloop
   15          | if bool_exp then statements1 elseOption endif
   16          | Vars assign expression

   17 if: IF

   18 then: THEN

   19 elseOption: else statements1
   20           | /* empty */

   21 else: ELSE

   22 endif: ENDIF

   23 assign: ASSIGN

   24 expression: multplicative_exp moreMultExp

   25 multplicative_exp: term terms

   26 term: minus Vars
   27     | minus number
   28     | minus left_paren expression right_paren
   29     | Vars
   30     | number
   31     | left_paren expression right_paren

   32 terms: mult term
   33      | div term
   34      | mod term

   35 mult: MULT

   36 div: DIV

   37 mod: MOD

   38 moreMultExp: plus multplicative_exp
   39            | minus multplicative_exp
   40            | /* empty */

   41 plus: ADD

   42 minus: SUB

   43 do: DO

   44 beginloop: BEGINLOOP

   45 statements1: /* empty */

   46 endloop: ENDLOOP

   47 while: WHILE

   48 bool_exp: /* empty */

   49 write: WRITE

   50 read: READ

   51 Vars: identifier
   52     | identifier left_paren expression right_paren

   53 continue: CONTINUE

   54 endprogram: END_PROGRAM

   55 declarations: declaration semicolon declarations
   56             | /* empty */

   57 declaration: identifier identMore colon array left_paren number right_paren of integer
   58            | identifier identMore colon integer

   59 identMore: comma identMore
   60          | /* empty */

   61 colon: COLON

   62 array: ARRAY

   63 left_paren: L_PAREN

   64 number: NUMBER

   65 right_paren: R_PAREN

   66 of: OF

   67 integer: INTEGER

   68 comma: COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
BEGIN_PROGRAM (259) 7
END_PROGRAM (260) 54
INTEGER (261) 67
ARRAY (262) 62
OF (263) 66
IF (264) 17
THEN (265) 18
ELSE (266) 21
ENDIF (267) 22
ELSEIF (268)
WHILE (269) 47
DO (270) 43
BEGINLOOP (271) 44
ENDLOOP (272) 46
BREAK (273)
CONTINUE (274) 53
END (275)
EXIT (276)
READ (277) 50
WRITE (278) 49
NOT (279)
TRUE (280)
FALSE (281)
SEMICOLON (282) 5
COLON (283) 61
COMMA (284) 68
QUESTION (285)
L_BRACKET (286)
R_BRACKET (287)
ASSIGN (288) 23
NUMBER (289) 64
IDENT (290) 4
R_PAREN (291) 65
L_PAREN (292) 63
GTE (293)
LTE (294)
GT (295)
LT (296)
NEQ (297)
EQ (298)
MOD (299) 37
DIV (300) 36
MULT (301) 35
ADD (302) 41
SUB (303) 42
AND (304)
OR (305)
ELSE_PREC (306)
IF_PREC (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program_start (54)
    on left: 1 2, on right: 0
program (55)
    on left: 3, on right: 2
identifier (56)
    on left: 4, on right: 2 51 52 57 58
semicolon (57)
    on left: 5, on right: 2 8 55
block (58)
    on left: 6, on right: 2
beginprogram (59)
    on left: 7, on right: 6
statements (60)
    on left: 8 9, on right: 6 8
statement (61)
    on left: 10 11 12 13 14 15 16, on right: 8
if (62)
    on left: 17, on right: 15
then (63)
    on left: 18, on right: 15
elseOption (64)
    on left: 19 20, on right: 15
else (65)
    on left: 21, on right: 19
endif (66)
    on left: 22, on right: 15
assign (67)
    on left: 23, on right: 16
expression (68)
    on left: 24, on right: 16 28 31 52
multplicative_exp (69)
    on left: 25, on right: 24 38 39
term (70)
    on left: 26 27 28 29 30 31, on right: 25 32 33 34
terms (71)
    on left: 32 33 34, on right: 25
mult (72)
    on left: 35, on right: 32
div (73)
    on left: 36, on right: 33
mod (74)
    on left: 37, on right: 34
moreMultExp (75)
    on left: 38 39 40, on right: 24
plus (76)
    on left: 41, on right: 38
minus (77)
    on left: 42, on right: 26 27 28 39
do (78)
    on left: 43, on right: 13
beginloop (79)
    on left: 44, on right: 13 14
statements1 (80)
    on left: 45, on right: 13 14 15 19
endloop (81)
    on left: 46, on right: 13 14
while (82)
    on left: 47, on right: 13 14
bool_exp (83)
    on left: 48, on right: 13 14 15
write (84)
    on left: 49, on right: 11
read (85)
    on left: 50, on right: 12
Vars (86)
    on left: 51 52, on right: 11 12 16 26 29
continue (87)
    on left: 53, on right: 10
endprogram (88)
    on left: 54, on right: 2
declarations (89)
    on left: 55 56, on right: 6 55
declaration (90)
    on left: 57 58, on right: 55
identMore (91)
    on left: 59 60, on right: 57 58 59
colon (92)
    on left: 61, on right: 57 58
array (93)
    on left: 62, on right: 57
left_paren (94)
    on left: 63, on right: 28 31 52 57
number (95)
    on left: 64, on right: 27 30 57
right_paren (96)
    on left: 65, on right: 28 31 52 57
of (97)
    on left: 66, on right: 57
integer (98)
    on left: 67, on right: 57 58
comma (99)
    on left: 68, on right: 59


state 0

    0 $accept: . program_start $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 1 (program_start)

    program_start  go to state 2
    program        go to state 3


state 1

    3 program: PROGRAM .

    $default  reduce using rule 3 (program)


state 2

    0 $accept: program_start . $end

    $end  shift, and go to state 4


state 3

    2 program_start: program . identifier semicolon block endprogram

    IDENT  shift, and go to state 5

    identifier  go to state 6


state 4

    0 $accept: program_start $end .

    $default  accept


state 5

    4 identifier: IDENT .

    $default  reduce using rule 4 (identifier)


state 6

    2 program_start: program identifier . semicolon block endprogram

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 7

    5 semicolon: SEMICOLON .

    $default  reduce using rule 5 (semicolon)


state 8

    2 program_start: program identifier semicolon . block endprogram

    IDENT  shift, and go to state 5

    $default  reduce using rule 56 (declarations)

    identifier    go to state 9
    block         go to state 10
    declarations  go to state 11
    declaration   go to state 12


state 9

   57 declaration: identifier . identMore colon array left_paren number right_paren of integer
   58            | identifier . identMore colon integer

    COMMA  shift, and go to state 13

    $default  reduce using rule 60 (identMore)

    identMore  go to state 14
    comma      go to state 15


state 10

    2 program_start: program identifier semicolon block . endprogram

    END_PROGRAM  shift, and go to state 16

    endprogram  go to state 17


state 11

    6 block: declarations . beginprogram statements

    BEGIN_PROGRAM  shift, and go to state 18

    beginprogram  go to state 19


state 12

   55 declarations: declaration . semicolon declarations

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 20


state 13

   68 comma: COMMA .

    $default  reduce using rule 68 (comma)


state 14

   57 declaration: identifier identMore . colon array left_paren number right_paren of integer
   58            | identifier identMore . colon integer

    COLON  shift, and go to state 21

    colon  go to state 22


state 15

   59 identMore: comma . identMore

    COMMA  shift, and go to state 13

    $default  reduce using rule 60 (identMore)

    identMore  go to state 23
    comma      go to state 15


state 16

   54 endprogram: END_PROGRAM .

    $default  reduce using rule 54 (endprogram)


state 17

    2 program_start: program identifier semicolon block endprogram .

    $default  reduce using rule 2 (program_start)


state 18

    7 beginprogram: BEGIN_PROGRAM .

    $default  reduce using rule 7 (beginprogram)


state 19

    6 block: declarations beginprogram . statements

    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    READ      shift, and go to state 28
    WRITE     shift, and go to state 29
    IDENT     shift, and go to state 5

    $default  reduce using rule 9 (statements)

    identifier  go to state 30
    statements  go to state 31
    statement   go to state 32
    if          go to state 33
    do          go to state 34
    while       go to state 35
    write       go to state 36
    read        go to state 37
    Vars        go to state 38
    continue    go to state 39


state 20

   55 declarations: declaration semicolon . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 56 (declarations)

    identifier    go to state 9
    declarations  go to state 40
    declaration   go to state 12


state 21

   61 colon: COLON .

    $default  reduce using rule 61 (colon)


state 22

   57 declaration: identifier identMore colon . array left_paren number right_paren of integer
   58            | identifier identMore colon . integer

    INTEGER  shift, and go to state 41
    ARRAY    shift, and go to state 42

    array    go to state 43
    integer  go to state 44


state 23

   59 identMore: comma identMore .

    $default  reduce using rule 59 (identMore)


state 24

   17 if: IF .

    $default  reduce using rule 17 (if)


state 25

   47 while: WHILE .

    $default  reduce using rule 47 (while)


state 26

   43 do: DO .

    $default  reduce using rule 43 (do)


state 27

   53 continue: CONTINUE .

    $default  reduce using rule 53 (continue)


state 28

   50 read: READ .

    $default  reduce using rule 50 (read)


state 29

   49 write: WRITE .

    $default  reduce using rule 49 (write)


state 30

   51 Vars: identifier .
   52     | identifier . left_paren expression right_paren

    L_PAREN  shift, and go to state 45

    $default  reduce using rule 51 (Vars)

    left_paren  go to state 46


state 31

    6 block: declarations beginprogram statements .

    $default  reduce using rule 6 (block)


state 32

    8 statements: statement . semicolon statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 47


state 33

   15 statement: if . bool_exp then statements1 elseOption endif

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 48


state 34

   13 statement: do . beginloop statements1 endloop while bool_exp

    BEGINLOOP  shift, and go to state 49

    beginloop  go to state 50


state 35

   14 statement: while . bool_exp beginloop statements1 endloop

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 51


state 36

   11 statement: write . Vars

    IDENT  shift, and go to state 5

    identifier  go to state 30
    Vars        go to state 52


state 37

   12 statement: read . Vars

    IDENT  shift, and go to state 5

    identifier  go to state 30
    Vars        go to state 53


state 38

   16 statement: Vars . assign expression

    ASSIGN  shift, and go to state 54

    assign  go to state 55


state 39

   10 statement: continue .

    $default  reduce using rule 10 (statement)


state 40

   55 declarations: declaration semicolon declarations .

    $default  reduce using rule 55 (declarations)


state 41

   67 integer: INTEGER .

    $default  reduce using rule 67 (integer)


state 42

   62 array: ARRAY .

    $default  reduce using rule 62 (array)


state 43

   57 declaration: identifier identMore colon array . left_paren number right_paren of integer

    L_PAREN  shift, and go to state 45

    left_paren  go to state 56


state 44

   58 declaration: identifier identMore colon integer .

    $default  reduce using rule 58 (declaration)


state 45

   63 left_paren: L_PAREN .

    $default  reduce using rule 63 (left_paren)


state 46

   52 Vars: identifier left_paren . expression right_paren

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    expression         go to state 59
    multplicative_exp  go to state 60
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 47

    8 statements: statement semicolon . statements

    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    READ      shift, and go to state 28
    WRITE     shift, and go to state 29
    IDENT     shift, and go to state 5

    $default  reduce using rule 9 (statements)

    identifier  go to state 30
    statements  go to state 66
    statement   go to state 32
    if          go to state 33
    do          go to state 34
    while       go to state 35
    write       go to state 36
    read        go to state 37
    Vars        go to state 38
    continue    go to state 39


state 48

   15 statement: if bool_exp . then statements1 elseOption endif

    THEN  shift, and go to state 67

    then  go to state 68


state 49

   44 beginloop: BEGINLOOP .

    $default  reduce using rule 44 (beginloop)


state 50

   13 statement: do beginloop . statements1 endloop while bool_exp

    $default  reduce using rule 45 (statements1)

    statements1  go to state 69


state 51

   14 statement: while bool_exp . beginloop statements1 endloop

    BEGINLOOP  shift, and go to state 49

    beginloop  go to state 70


state 52

   11 statement: write Vars .

    $default  reduce using rule 11 (statement)


state 53

   12 statement: read Vars .

    $default  reduce using rule 12 (statement)


state 54

   23 assign: ASSIGN .

    $default  reduce using rule 23 (assign)


state 55

   16 statement: Vars assign . expression

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    expression         go to state 71
    multplicative_exp  go to state 60
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 56

   57 declaration: identifier identMore colon array left_paren . number right_paren of integer

    NUMBER  shift, and go to state 57

    number  go to state 72


state 57

   64 number: NUMBER .

    $default  reduce using rule 64 (number)


state 58

   42 minus: SUB .

    $default  reduce using rule 42 (minus)


state 59

   52 Vars: identifier left_paren expression . right_paren

    R_PAREN  shift, and go to state 73

    right_paren  go to state 74


state 60

   24 expression: multplicative_exp . moreMultExp

    ADD  shift, and go to state 75
    SUB  shift, and go to state 58

    $default  reduce using rule 40 (moreMultExp)

    moreMultExp  go to state 76
    plus         go to state 77
    minus        go to state 78


state 61

   25 multplicative_exp: term . terms

    MOD   shift, and go to state 79
    DIV   shift, and go to state 80
    MULT  shift, and go to state 81

    terms  go to state 82
    mult   go to state 83
    div    go to state 84
    mod    go to state 85


state 62

   26 term: minus . Vars
   27     | minus . number
   28     | minus . left_paren expression right_paren

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45

    identifier  go to state 30
    Vars        go to state 86
    left_paren  go to state 87
    number      go to state 88


state 63

   29 term: Vars .

    $default  reduce using rule 29 (term)


state 64

   31 term: left_paren . expression right_paren

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    expression         go to state 89
    multplicative_exp  go to state 60
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 65

   30 term: number .

    $default  reduce using rule 30 (term)


state 66

    8 statements: statement semicolon statements .

    $default  reduce using rule 8 (statements)


state 67

   18 then: THEN .

    $default  reduce using rule 18 (then)


state 68

   15 statement: if bool_exp then . statements1 elseOption endif

    $default  reduce using rule 45 (statements1)

    statements1  go to state 90


state 69

   13 statement: do beginloop statements1 . endloop while bool_exp

    ENDLOOP  shift, and go to state 91

    endloop  go to state 92


state 70

   14 statement: while bool_exp beginloop . statements1 endloop

    $default  reduce using rule 45 (statements1)

    statements1  go to state 93


state 71

   16 statement: Vars assign expression .

    $default  reduce using rule 16 (statement)


state 72

   57 declaration: identifier identMore colon array left_paren number . right_paren of integer

    R_PAREN  shift, and go to state 73

    right_paren  go to state 94


state 73

   65 right_paren: R_PAREN .

    $default  reduce using rule 65 (right_paren)


state 74

   52 Vars: identifier left_paren expression right_paren .

    $default  reduce using rule 52 (Vars)


state 75

   41 plus: ADD .

    $default  reduce using rule 41 (plus)


state 76

   24 expression: multplicative_exp moreMultExp .

    $default  reduce using rule 24 (expression)


state 77

   38 moreMultExp: plus . multplicative_exp

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    multplicative_exp  go to state 95
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 78

   39 moreMultExp: minus . multplicative_exp

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    multplicative_exp  go to state 96
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 79

   37 mod: MOD .

    $default  reduce using rule 37 (mod)


state 80

   36 div: DIV .

    $default  reduce using rule 36 (div)


state 81

   35 mult: MULT .

    $default  reduce using rule 35 (mult)


state 82

   25 multplicative_exp: term terms .

    $default  reduce using rule 25 (multplicative_exp)


state 83

   32 terms: mult . term

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier  go to state 30
    term        go to state 97
    minus       go to state 62
    Vars        go to state 63
    left_paren  go to state 64
    number      go to state 65


state 84

   33 terms: div . term

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier  go to state 30
    term        go to state 98
    minus       go to state 62
    Vars        go to state 63
    left_paren  go to state 64
    number      go to state 65


state 85

   34 terms: mod . term

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier  go to state 30
    term        go to state 99
    minus       go to state 62
    Vars        go to state 63
    left_paren  go to state 64
    number      go to state 65


state 86

   26 term: minus Vars .

    $default  reduce using rule 26 (term)


state 87

   28 term: minus left_paren . expression right_paren

    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 58

    identifier         go to state 30
    expression         go to state 100
    multplicative_exp  go to state 60
    term               go to state 61
    minus              go to state 62
    Vars               go to state 63
    left_paren         go to state 64
    number             go to state 65


state 88

   27 term: minus number .

    $default  reduce using rule 27 (term)


state 89

   31 term: left_paren expression . right_paren

    R_PAREN  shift, and go to state 73

    right_paren  go to state 101


state 90

   15 statement: if bool_exp then statements1 . elseOption endif

    ELSE  shift, and go to state 102

    $default  reduce using rule 20 (elseOption)

    elseOption  go to state 103
    else        go to state 104


state 91

   46 endloop: ENDLOOP .

    $default  reduce using rule 46 (endloop)


state 92

   13 statement: do beginloop statements1 endloop . while bool_exp

    WHILE  shift, and go to state 25

    while  go to state 105


state 93

   14 statement: while bool_exp beginloop statements1 . endloop

    ENDLOOP  shift, and go to state 91

    endloop  go to state 106


state 94

   57 declaration: identifier identMore colon array left_paren number right_paren . of integer

    OF  shift, and go to state 107

    of  go to state 108


state 95

   38 moreMultExp: plus multplicative_exp .

    $default  reduce using rule 38 (moreMultExp)


state 96

   39 moreMultExp: minus multplicative_exp .

    $default  reduce using rule 39 (moreMultExp)


state 97

   32 terms: mult term .

    $default  reduce using rule 32 (terms)


state 98

   33 terms: div term .

    $default  reduce using rule 33 (terms)


state 99

   34 terms: mod term .

    $default  reduce using rule 34 (terms)


state 100

   28 term: minus left_paren expression . right_paren

    R_PAREN  shift, and go to state 73

    right_paren  go to state 109


state 101

   31 term: left_paren expression right_paren .

    $default  reduce using rule 31 (term)


state 102

   21 else: ELSE .

    $default  reduce using rule 21 (else)


state 103

   15 statement: if bool_exp then statements1 elseOption . endif

    ENDIF  shift, and go to state 110

    endif  go to state 111


state 104

   19 elseOption: else . statements1

    $default  reduce using rule 45 (statements1)

    statements1  go to state 112


state 105

   13 statement: do beginloop statements1 endloop while . bool_exp

    $default  reduce using rule 48 (bool_exp)

    bool_exp  go to state 113


state 106

   14 statement: while bool_exp beginloop statements1 endloop .

    $default  reduce using rule 14 (statement)


state 107

   66 of: OF .

    $default  reduce using rule 66 (of)


state 108

   57 declaration: identifier identMore colon array left_paren number right_paren of . integer

    INTEGER  shift, and go to state 41

    integer  go to state 114


state 109

   28 term: minus left_paren expression right_paren .

    $default  reduce using rule 28 (term)


state 110

   22 endif: ENDIF .

    $default  reduce using rule 22 (endif)


state 111

   15 statement: if bool_exp then statements1 elseOption endif .

    $default  reduce using rule 15 (statement)


state 112

   19 elseOption: else statements1 .

    $default  reduce using rule 19 (elseOption)


state 113

   13 statement: do beginloop statements1 endloop while bool_exp .

    $default  reduce using rule 13 (statement)


state 114

   57 declaration: identifier identMore colon array left_paren number right_paren of integer .

    $default  reduce using rule 57 (declaration)
