Terminals which are not used

   ELSEIF
   BREAK
   END
   EXIT
   QUESTION
   L_BRACKET
   R_BRACKET
   ELSE_PREC
   IF_PREC


Grammar

    0 $accept: program_start $end

    1 program_start: program identifier semicolon block endprogram

    2 block: declarations beginprogram statements

    3 declarations: declaration semicolon declarations
    4             | /* empty */

    5 declaration: identifier identMore colon array left_paren number right_paren of integer
    6            | identifier identMore colon integer

    7 identMore: comma identifier identMore
    8          | /* empty */

    9 statements: statement semicolon
   10           | statements statement semicolon

   11 statement: continue
   12          | write Vars
   13          | read Vars
   14          | do beginloop statements1 endloop while bool_exp
   15          | while bool_exp beginloop statements1 endloop
   16          | if bool_exp then statements1 elseOption endif
   17          | Var assign expression

   18 Vars: Vars comma Var
   19     | Var

   20 Var: identifier
   21    | identifier left_paren expression right_paren

   22 statements1: /* empty */
   23            | statement semicolon statements1

   24 elseOption: else statements1
   25           | /* empty */

   26 bool_exp: relation_and_exp relation_or

   27 relation_and_exp: relation_exp relation_and

   28 relation_or: or relation_and_exp relation_or
   29            | /* empty */

   30 relation_and: and relation_exp relation_and
   31             | /* empty */

   32 relation_exp: expression comp expression
   33             | true
   34             | false
   35             | left_paren bool_exp right_paren
   36             | not expression comp expression
   37             | not true
   38             | not false
   39             | not left_paren bool_exp right_paren

   40 expression: multplicative_exp moreMultExp

   41 multplicative_exp: term terms

   42 term: minus Var
   43     | minus number
   44     | minus left_paren expression right_paren
   45     | Var
   46     | number
   47     | left_paren expression right_paren

   48 terms: terms mult term
   49      | terms div term
   50      | terms mod term
   51      | /* empty */

   52 moreMultExp: plus multplicative_exp moreMultExp
   53            | minus multplicative_exp moreMultExp
   54            | /* empty */

   55 program: PROGRAM

   56 identifier: IDENT

   57 semicolon: SEMICOLON

   58 beginprogram: BEGIN_PROGRAM

   59 endprogram: END_PROGRAM

   60 colon: COLON

   61 array: ARRAY

   62 left_paren: L_PAREN

   63 number: NUMBER

   64 right_paren: R_PAREN

   65 of: OF

   66 integer: INTEGER

   67 comma: COMMA

   68 continue: CONTINUE

   69 write: WRITE

   70 read: READ

   71 do: DO

   72 beginloop: BEGINLOOP

   73 endloop: ENDLOOP

   74 while: WHILE

   75 if: IF

   76 then: THEN

   77 else: ELSE

   78 endif: ENDIF

   79 assign: ASSIGN

   80 and: AND

   81 or: OR

   82 true: TRUE

   83 false: FALSE

   84 not: NOT

   85 comp: EQ
   86     | NEQ
   87     | LT
   88     | GT
   89     | LTE
   90     | GTE

   91 mult: MULT

   92 div: DIV

   93 mod: MOD

   94 plus: ADD

   95 minus: SUB


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 55
BEGIN_PROGRAM (259) 58
END_PROGRAM (260) 59
INTEGER (261) 66
ARRAY (262) 61
OF (263) 65
IF (264) 75
THEN (265) 76
ELSE (266) 77
ENDIF (267) 78
ELSEIF (268)
WHILE (269) 74
DO (270) 71
BEGINLOOP (271) 72
ENDLOOP (272) 73
BREAK (273)
CONTINUE (274) 68
END (275)
EXIT (276)
READ (277) 70
WRITE (278) 69
NOT (279) 84
TRUE (280) 82
FALSE (281) 83
SEMICOLON (282) 57
COLON (283) 60
COMMA (284) 67
QUESTION (285)
L_BRACKET (286)
R_BRACKET (287)
ASSIGN (288) 79
NUMBER (289) 63
IDENT (290) 56
R_PAREN (291) 64
L_PAREN (292) 62
GTE (293) 90
LTE (294) 89
GT (295) 88
LT (296) 87
NEQ (297) 86
EQ (298) 85
MOD (299) 93
DIV (300) 92
MULT (301) 91
ADD (302) 94
SUB (303) 95
AND (304) 80
OR (305) 81
ELSE_PREC (306)
IF_PREC (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program_start (54)
    on left: 1, on right: 0
block (55)
    on left: 2, on right: 1
declarations (56)
    on left: 3 4, on right: 2 3
declaration (57)
    on left: 5 6, on right: 3
identMore (58)
    on left: 7 8, on right: 5 6 7
statements (59)
    on left: 9 10, on right: 2 10
statement (60)
    on left: 11 12 13 14 15 16 17, on right: 9 10 23
Vars (61)
    on left: 18 19, on right: 12 13 18
Var (62)
    on left: 20 21, on right: 17 18 19 42 45
statements1 (63)
    on left: 22 23, on right: 14 15 16 23 24
elseOption (64)
    on left: 24 25, on right: 16
bool_exp (65)
    on left: 26, on right: 14 15 16 35 39
relation_and_exp (66)
    on left: 27, on right: 26 28
relation_or (67)
    on left: 28 29, on right: 26 28
relation_and (68)
    on left: 30 31, on right: 27 30
relation_exp (69)
    on left: 32 33 34 35 36 37 38 39, on right: 27 30
expression (70)
    on left: 40, on right: 17 21 32 36 44 47
multplicative_exp (71)
    on left: 41, on right: 40 52 53
term (72)
    on left: 42 43 44 45 46 47, on right: 41 48 49 50
terms (73)
    on left: 48 49 50 51, on right: 41 48 49 50
moreMultExp (74)
    on left: 52 53 54, on right: 40 52 53
program (75)
    on left: 55, on right: 1
identifier (76)
    on left: 56, on right: 1 5 6 7 20 21
semicolon (77)
    on left: 57, on right: 1 3 9 10 23
beginprogram (78)
    on left: 58, on right: 2
endprogram (79)
    on left: 59, on right: 1
colon (80)
    on left: 60, on right: 5 6
array (81)
    on left: 61, on right: 5
left_paren (82)
    on left: 62, on right: 5 21 35 39 44 47
number (83)
    on left: 63, on right: 5 43 46
right_paren (84)
    on left: 64, on right: 5 21 35 39 44 47
of (85)
    on left: 65, on right: 5
integer (86)
    on left: 66, on right: 5 6
comma (87)
    on left: 67, on right: 7 18
continue (88)
    on left: 68, on right: 11
write (89)
    on left: 69, on right: 12
read (90)
    on left: 70, on right: 13
do (91)
    on left: 71, on right: 14
beginloop (92)
    on left: 72, on right: 14 15
endloop (93)
    on left: 73, on right: 14 15
while (94)
    on left: 74, on right: 14 15
if (95)
    on left: 75, on right: 16
then (96)
    on left: 76, on right: 16
else (97)
    on left: 77, on right: 24
endif (98)
    on left: 78, on right: 16
assign (99)
    on left: 79, on right: 17
and (100)
    on left: 80, on right: 30
or (101)
    on left: 81, on right: 28
true (102)
    on left: 82, on right: 33 37
false (103)
    on left: 83, on right: 34 38
not (104)
    on left: 84, on right: 36 37 38 39
comp (105)
    on left: 85 86 87 88 89 90, on right: 32 36
mult (106)
    on left: 91, on right: 48
div (107)
    on left: 92, on right: 49
mod (108)
    on left: 93, on right: 50
plus (109)
    on left: 94, on right: 52
minus (110)
    on left: 95, on right: 42 43 44 53


state 0

    0 $accept: . program_start $end

    PROGRAM  shift, and go to state 1

    program_start  go to state 2
    program        go to state 3


state 1

   55 program: PROGRAM .

    $default  reduce using rule 55 (program)


state 2

    0 $accept: program_start . $end

    $end  shift, and go to state 4


state 3

    1 program_start: program . identifier semicolon block endprogram

    IDENT  shift, and go to state 5

    identifier  go to state 6


state 4

    0 $accept: program_start $end .

    $default  accept


state 5

   56 identifier: IDENT .

    $default  reduce using rule 56 (identifier)


state 6

    1 program_start: program identifier . semicolon block endprogram

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 7

   57 semicolon: SEMICOLON .

    $default  reduce using rule 57 (semicolon)


state 8

    1 program_start: program identifier semicolon . block endprogram

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    block         go to state 9
    declarations  go to state 10
    declaration   go to state 11
    identifier    go to state 12


state 9

    1 program_start: program identifier semicolon block . endprogram

    END_PROGRAM  shift, and go to state 13

    endprogram  go to state 14


state 10

    2 block: declarations . beginprogram statements

    BEGIN_PROGRAM  shift, and go to state 15

    beginprogram  go to state 16


state 11

    3 declarations: declaration . semicolon declarations

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 17


state 12

    5 declaration: identifier . identMore colon array left_paren number right_paren of integer
    6            | identifier . identMore colon integer

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (identMore)

    identMore  go to state 19
    comma      go to state 20


state 13

   59 endprogram: END_PROGRAM .

    $default  reduce using rule 59 (endprogram)


state 14

    1 program_start: program identifier semicolon block endprogram .

    $default  reduce using rule 1 (program_start)


state 15

   58 beginprogram: BEGIN_PROGRAM .

    $default  reduce using rule 58 (beginprogram)


state 16

    2 block: declarations beginprogram . statements

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    statements  go to state 27
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 17

    3 declarations: declaration semicolon . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    declarations  go to state 37
    declaration   go to state 11
    identifier    go to state 12


state 18

   67 comma: COMMA .

    $default  reduce using rule 67 (comma)


state 19

    5 declaration: identifier identMore . colon array left_paren number right_paren of integer
    6            | identifier identMore . colon integer

    COLON  shift, and go to state 38

    colon  go to state 39


state 20

    7 identMore: comma . identifier identMore

    IDENT  shift, and go to state 5

    identifier  go to state 40


state 21

   75 if: IF .

    $default  reduce using rule 75 (if)


state 22

   74 while: WHILE .

    $default  reduce using rule 74 (while)


state 23

   71 do: DO .

    $default  reduce using rule 71 (do)


state 24

   68 continue: CONTINUE .

    $default  reduce using rule 68 (continue)


state 25

   70 read: READ .

    $default  reduce using rule 70 (read)


state 26

   69 write: WRITE .

    $default  reduce using rule 69 (write)


state 27

    2 block: declarations beginprogram statements .
   10 statements: statements . statement semicolon

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 2 (block)

    statement   go to state 41
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 28

    9 statements: statement . semicolon

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 42


state 29

   17 statement: Var . assign expression

    ASSIGN  shift, and go to state 43

    assign  go to state 44


state 30

   20 Var: identifier .
   21    | identifier . left_paren expression right_paren

    L_PAREN  shift, and go to state 45

    $default  reduce using rule 20 (Var)

    left_paren  go to state 46


state 31

   11 statement: continue .

    $default  reduce using rule 11 (statement)


state 32

   12 statement: write . Vars

    IDENT  shift, and go to state 5

    Vars        go to state 47
    Var         go to state 48
    identifier  go to state 30


state 33

   13 statement: read . Vars

    IDENT  shift, and go to state 5

    Vars        go to state 49
    Var         go to state 48
    identifier  go to state 30


state 34

   14 statement: do . beginloop statements1 endloop while bool_exp

    BEGINLOOP  shift, and go to state 50

    beginloop  go to state 51


state 35

   15 statement: while . bool_exp beginloop statements1 endloop

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    bool_exp           go to state 58
    relation_and_exp   go to state 59
    relation_exp       go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 36

   16 statement: if . bool_exp then statements1 elseOption endif

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    bool_exp           go to state 70
    relation_and_exp   go to state 59
    relation_exp       go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 37

    3 declarations: declaration semicolon declarations .

    $default  reduce using rule 3 (declarations)


state 38

   60 colon: COLON .

    $default  reduce using rule 60 (colon)


state 39

    5 declaration: identifier identMore colon . array left_paren number right_paren of integer
    6            | identifier identMore colon . integer

    INTEGER  shift, and go to state 71
    ARRAY    shift, and go to state 72

    array    go to state 73
    integer  go to state 74


state 40

    7 identMore: comma identifier . identMore

    COMMA  shift, and go to state 18

    $default  reduce using rule 8 (identMore)

    identMore  go to state 75
    comma      go to state 20


state 41

   10 statements: statements statement . semicolon

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 76


state 42

    9 statements: statement semicolon .

    $default  reduce using rule 9 (statements)


state 43

   79 assign: ASSIGN .

    $default  reduce using rule 79 (assign)


state 44

   17 statement: Var assign . expression

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 77
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 45

   62 left_paren: L_PAREN .

    $default  reduce using rule 62 (left_paren)


state 46

   21 Var: identifier left_paren . expression right_paren

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 79
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 47

   12 statement: write Vars .
   18 Vars: Vars . comma Var

    COMMA  shift, and go to state 18

    $default  reduce using rule 12 (statement)

    comma  go to state 80


state 48

   19 Vars: Var .

    $default  reduce using rule 19 (Vars)


state 49

   13 statement: read Vars .
   18 Vars: Vars . comma Var

    COMMA  shift, and go to state 18

    $default  reduce using rule 13 (statement)

    comma  go to state 80


state 50

   72 beginloop: BEGINLOOP .

    $default  reduce using rule 72 (beginloop)


state 51

   14 statement: do beginloop . statements1 endloop while bool_exp

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (statements1)

    statement    go to state 81
    Var          go to state 29
    statements1  go to state 82
    identifier   go to state 30
    continue     go to state 31
    write        go to state 32
    read         go to state 33
    do           go to state 34
    while        go to state 35
    if           go to state 36


state 52

   84 not: NOT .

    $default  reduce using rule 84 (not)


state 53

   82 true: TRUE .

    $default  reduce using rule 82 (true)


state 54

   83 false: FALSE .

    $default  reduce using rule 83 (false)


state 55

   63 number: NUMBER .

    $default  reduce using rule 63 (number)


state 56

   95 minus: SUB .

    $default  reduce using rule 95 (minus)


state 57

   45 term: Var .

    $default  reduce using rule 45 (term)


state 58

   15 statement: while bool_exp . beginloop statements1 endloop

    BEGINLOOP  shift, and go to state 50

    beginloop  go to state 83


state 59

   26 bool_exp: relation_and_exp . relation_or

    OR  shift, and go to state 84

    $default  reduce using rule 29 (relation_or)

    relation_or  go to state 85
    or           go to state 86


state 60

   27 relation_and_exp: relation_exp . relation_and

    AND  shift, and go to state 87

    $default  reduce using rule 31 (relation_and)

    relation_and  go to state 88
    and           go to state 89


state 61

   32 relation_exp: expression . comp expression

    GTE  shift, and go to state 90
    LTE  shift, and go to state 91
    GT   shift, and go to state 92
    LT   shift, and go to state 93
    NEQ  shift, and go to state 94
    EQ   shift, and go to state 95

    comp  go to state 96


state 62

   40 expression: multplicative_exp . moreMultExp

    ADD  shift, and go to state 97
    SUB  shift, and go to state 56

    $default  reduce using rule 54 (moreMultExp)

    moreMultExp  go to state 98
    plus         go to state 99
    minus        go to state 100


state 63

   41 multplicative_exp: term . terms

    $default  reduce using rule 51 (terms)

    terms  go to state 101


state 64

   35 relation_exp: left_paren . bool_exp right_paren
   47 term: left_paren . expression right_paren

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    bool_exp           go to state 102
    relation_and_exp   go to state 59
    relation_exp       go to state 60
    expression         go to state 103
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 65

   46 term: number .

    $default  reduce using rule 46 (term)


state 66

   33 relation_exp: true .

    $default  reduce using rule 33 (relation_exp)


state 67

   34 relation_exp: false .

    $default  reduce using rule 34 (relation_exp)


state 68

   36 relation_exp: not . expression comp expression
   37             | not . true
   38             | not . false
   39             | not . left_paren bool_exp right_paren

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 104
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 105
    number             go to state 65
    true               go to state 106
    false              go to state 107
    minus              go to state 69


state 69

   42 term: minus . Var
   43     | minus . number
   44     | minus . left_paren expression right_paren

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45

    Var         go to state 108
    identifier  go to state 30
    left_paren  go to state 109
    number      go to state 110


state 70

   16 statement: if bool_exp . then statements1 elseOption endif

    THEN  shift, and go to state 111

    then  go to state 112


state 71

   66 integer: INTEGER .

    $default  reduce using rule 66 (integer)


state 72

   61 array: ARRAY .

    $default  reduce using rule 61 (array)


state 73

    5 declaration: identifier identMore colon array . left_paren number right_paren of integer

    L_PAREN  shift, and go to state 45

    left_paren  go to state 113


state 74

    6 declaration: identifier identMore colon integer .

    $default  reduce using rule 6 (declaration)


state 75

    7 identMore: comma identifier identMore .

    $default  reduce using rule 7 (identMore)


state 76

   10 statements: statements statement semicolon .

    $default  reduce using rule 10 (statements)


state 77

   17 statement: Var assign expression .

    $default  reduce using rule 17 (statement)


state 78

   47 term: left_paren . expression right_paren

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 114
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 79

   21 Var: identifier left_paren expression . right_paren

    R_PAREN  shift, and go to state 115

    right_paren  go to state 116


state 80

   18 Vars: Vars comma . Var

    IDENT  shift, and go to state 5

    Var         go to state 117
    identifier  go to state 30


state 81

   23 statements1: statement . semicolon statements1

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 118


state 82

   14 statement: do beginloop statements1 . endloop while bool_exp

    ENDLOOP  shift, and go to state 119

    endloop  go to state 120


state 83

   15 statement: while bool_exp beginloop . statements1 endloop

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (statements1)

    statement    go to state 81
    Var          go to state 29
    statements1  go to state 121
    identifier   go to state 30
    continue     go to state 31
    write        go to state 32
    read         go to state 33
    do           go to state 34
    while        go to state 35
    if           go to state 36


state 84

   81 or: OR .

    $default  reduce using rule 81 (or)


state 85

   26 bool_exp: relation_and_exp relation_or .

    $default  reduce using rule 26 (bool_exp)


state 86

   28 relation_or: or . relation_and_exp relation_or

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    relation_and_exp   go to state 122
    relation_exp       go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 87

   80 and: AND .

    $default  reduce using rule 80 (and)


state 88

   27 relation_and_exp: relation_exp relation_and .

    $default  reduce using rule 27 (relation_and_exp)


state 89

   30 relation_and: and . relation_exp relation_and

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    relation_exp       go to state 123
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 90

   90 comp: GTE .

    $default  reduce using rule 90 (comp)


state 91

   89 comp: LTE .

    $default  reduce using rule 89 (comp)


state 92

   88 comp: GT .

    $default  reduce using rule 88 (comp)


state 93

   87 comp: LT .

    $default  reduce using rule 87 (comp)


state 94

   86 comp: NEQ .

    $default  reduce using rule 86 (comp)


state 95

   85 comp: EQ .

    $default  reduce using rule 85 (comp)


state 96

   32 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 124
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 97

   94 plus: ADD .

    $default  reduce using rule 94 (plus)


state 98

   40 expression: multplicative_exp moreMultExp .

    $default  reduce using rule 40 (expression)


state 99

   52 moreMultExp: plus . multplicative_exp moreMultExp

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    multplicative_exp  go to state 125
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 100

   53 moreMultExp: minus . multplicative_exp moreMultExp

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    multplicative_exp  go to state 126
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 101

   41 multplicative_exp: term terms .
   48 terms: terms . mult term
   49      | terms . div term
   50      | terms . mod term

    MOD   shift, and go to state 127
    DIV   shift, and go to state 128
    MULT  shift, and go to state 129

    $default  reduce using rule 41 (multplicative_exp)

    mult  go to state 130
    div   go to state 131
    mod   go to state 132


state 102

   35 relation_exp: left_paren bool_exp . right_paren

    R_PAREN  shift, and go to state 115

    right_paren  go to state 133


state 103

   32 relation_exp: expression . comp expression
   47 term: left_paren expression . right_paren

    R_PAREN  shift, and go to state 115
    GTE      shift, and go to state 90
    LTE      shift, and go to state 91
    GT       shift, and go to state 92
    LT       shift, and go to state 93
    NEQ      shift, and go to state 94
    EQ       shift, and go to state 95

    right_paren  go to state 134
    comp         go to state 96


state 104

   36 relation_exp: not expression . comp expression

    GTE  shift, and go to state 90
    LTE  shift, and go to state 91
    GT   shift, and go to state 92
    LT   shift, and go to state 93
    NEQ  shift, and go to state 94
    EQ   shift, and go to state 95

    comp  go to state 135


state 105

   39 relation_exp: not left_paren . bool_exp right_paren
   47 term: left_paren . expression right_paren

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    bool_exp           go to state 136
    relation_and_exp   go to state 59
    relation_exp       go to state 60
    expression         go to state 103
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 106

   37 relation_exp: not true .

    $default  reduce using rule 37 (relation_exp)


state 107

   38 relation_exp: not false .

    $default  reduce using rule 38 (relation_exp)


state 108

   42 term: minus Var .

    $default  reduce using rule 42 (term)


state 109

   44 term: minus left_paren . expression right_paren

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 137
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 110

   43 term: minus number .

    $default  reduce using rule 43 (term)


state 111

   76 then: THEN .

    $default  reduce using rule 76 (then)


state 112

   16 statement: if bool_exp then . statements1 elseOption endif

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (statements1)

    statement    go to state 81
    Var          go to state 29
    statements1  go to state 138
    identifier   go to state 30
    continue     go to state 31
    write        go to state 32
    read         go to state 33
    do           go to state 34
    while        go to state 35
    if           go to state 36


state 113

    5 declaration: identifier identMore colon array left_paren . number right_paren of integer

    NUMBER  shift, and go to state 55

    number  go to state 139


state 114

   47 term: left_paren expression . right_paren

    R_PAREN  shift, and go to state 115

    right_paren  go to state 134


state 115

   64 right_paren: R_PAREN .

    $default  reduce using rule 64 (right_paren)


state 116

   21 Var: identifier left_paren expression right_paren .

    $default  reduce using rule 21 (Var)


state 117

   18 Vars: Vars comma Var .

    $default  reduce using rule 18 (Vars)


state 118

   23 statements1: statement semicolon . statements1

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (statements1)

    statement    go to state 81
    Var          go to state 29
    statements1  go to state 140
    identifier   go to state 30
    continue     go to state 31
    write        go to state 32
    read         go to state 33
    do           go to state 34
    while        go to state 35
    if           go to state 36


state 119

   73 endloop: ENDLOOP .

    $default  reduce using rule 73 (endloop)


state 120

   14 statement: do beginloop statements1 endloop . while bool_exp

    WHILE  shift, and go to state 22

    while  go to state 141


state 121

   15 statement: while bool_exp beginloop statements1 . endloop

    ENDLOOP  shift, and go to state 119

    endloop  go to state 142


state 122

   28 relation_or: or relation_and_exp . relation_or

    OR  shift, and go to state 84

    $default  reduce using rule 29 (relation_or)

    relation_or  go to state 143
    or           go to state 86


state 123

   30 relation_and: and relation_exp . relation_and

    AND  shift, and go to state 87

    $default  reduce using rule 31 (relation_and)

    relation_and  go to state 144
    and           go to state 89


state 124

   32 relation_exp: expression comp expression .

    $default  reduce using rule 32 (relation_exp)


state 125

   52 moreMultExp: plus multplicative_exp . moreMultExp

    ADD  shift, and go to state 97
    SUB  shift, and go to state 56

    $default  reduce using rule 54 (moreMultExp)

    moreMultExp  go to state 145
    plus         go to state 99
    minus        go to state 100


state 126

   53 moreMultExp: minus multplicative_exp . moreMultExp

    ADD  shift, and go to state 97
    SUB  shift, and go to state 56

    $default  reduce using rule 54 (moreMultExp)

    moreMultExp  go to state 146
    plus         go to state 99
    minus        go to state 100


state 127

   93 mod: MOD .

    $default  reduce using rule 93 (mod)


state 128

   92 div: DIV .

    $default  reduce using rule 92 (div)


state 129

   91 mult: MULT .

    $default  reduce using rule 91 (mult)


state 130

   48 terms: terms mult . term

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var         go to state 57
    term        go to state 147
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 65
    minus       go to state 69


state 131

   49 terms: terms div . term

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var         go to state 57
    term        go to state 148
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 65
    minus       go to state 69


state 132

   50 terms: terms mod . term

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var         go to state 57
    term        go to state 149
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 65
    minus       go to state 69


state 133

   35 relation_exp: left_paren bool_exp right_paren .

    $default  reduce using rule 35 (relation_exp)


state 134

   47 term: left_paren expression right_paren .

    $default  reduce using rule 47 (term)


state 135

   36 relation_exp: not expression comp . expression

    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    expression         go to state 150
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 65
    minus              go to state 69


state 136

   39 relation_exp: not left_paren bool_exp . right_paren

    R_PAREN  shift, and go to state 115

    right_paren  go to state 151


state 137

   44 term: minus left_paren expression . right_paren

    R_PAREN  shift, and go to state 115

    right_paren  go to state 152


state 138

   16 statement: if bool_exp then statements1 . elseOption endif

    ELSE  shift, and go to state 153

    $default  reduce using rule 25 (elseOption)

    elseOption  go to state 154
    else        go to state 155


state 139

    5 declaration: identifier identMore colon array left_paren number . right_paren of integer

    R_PAREN  shift, and go to state 115

    right_paren  go to state 156


state 140

   23 statements1: statement semicolon statements1 .

    $default  reduce using rule 23 (statements1)


state 141

   14 statement: do beginloop statements1 endloop while . bool_exp

    NOT      shift, and go to state 52
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 56

    Var                go to state 57
    bool_exp           go to state 157
    relation_and_exp   go to state 59
    relation_exp       go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    identifier         go to state 30
    left_paren         go to state 64
    number             go to state 65
    true               go to state 66
    false              go to state 67
    not                go to state 68
    minus              go to state 69


state 142

   15 statement: while bool_exp beginloop statements1 endloop .

    $default  reduce using rule 15 (statement)


state 143

   28 relation_or: or relation_and_exp relation_or .

    $default  reduce using rule 28 (relation_or)


state 144

   30 relation_and: and relation_exp relation_and .

    $default  reduce using rule 30 (relation_and)


state 145

   52 moreMultExp: plus multplicative_exp moreMultExp .

    $default  reduce using rule 52 (moreMultExp)


state 146

   53 moreMultExp: minus multplicative_exp moreMultExp .

    $default  reduce using rule 53 (moreMultExp)


state 147

   48 terms: terms mult term .

    $default  reduce using rule 48 (terms)


state 148

   49 terms: terms div term .

    $default  reduce using rule 49 (terms)


state 149

   50 terms: terms mod term .

    $default  reduce using rule 50 (terms)


state 150

   36 relation_exp: not expression comp expression .

    $default  reduce using rule 36 (relation_exp)


state 151

   39 relation_exp: not left_paren bool_exp right_paren .

    $default  reduce using rule 39 (relation_exp)


state 152

   44 term: minus left_paren expression right_paren .

    $default  reduce using rule 44 (term)


state 153

   77 else: ELSE .

    $default  reduce using rule 77 (else)


state 154

   16 statement: if bool_exp then statements1 elseOption . endif

    ENDIF  shift, and go to state 158

    endif  go to state 159


state 155

   24 elseOption: else . statements1

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 22 (statements1)

    statement    go to state 81
    Var          go to state 29
    statements1  go to state 160
    identifier   go to state 30
    continue     go to state 31
    write        go to state 32
    read         go to state 33
    do           go to state 34
    while        go to state 35
    if           go to state 36


state 156

    5 declaration: identifier identMore colon array left_paren number right_paren . of integer

    OF  shift, and go to state 161

    of  go to state 162


state 157

   14 statement: do beginloop statements1 endloop while bool_exp .

    $default  reduce using rule 14 (statement)


state 158

   78 endif: ENDIF .

    $default  reduce using rule 78 (endif)


state 159

   16 statement: if bool_exp then statements1 elseOption endif .

    $default  reduce using rule 16 (statement)


state 160

   24 elseOption: else statements1 .

    $default  reduce using rule 24 (elseOption)


state 161

   65 of: OF .

    $default  reduce using rule 65 (of)


state 162

    5 declaration: identifier identMore colon array left_paren number right_paren of . integer

    INTEGER  shift, and go to state 71

    integer  go to state 163


state 163

    5 declaration: identifier identMore colon array left_paren number right_paren of integer .

    $default  reduce using rule 5 (declaration)
