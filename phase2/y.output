Terminals which are not used

   ELSEIF
   BREAK
   END
   EXIT
   QUESTION
   L_BRACKET
   R_BRACKET
   ELSE_PREC
   IF_PREC


Grammar

    0 $accept: program_start $end

    1 program_start: program identifier semicolon block endprogram

    2 block: declarations beginprogram statements

    3 declarations: declaration semicolon declarations
    4             | /* empty */

    5 declaration: identifier identMore colon declaration2 integer

    6 declaration2: array left_paren number right_paren of
    7             | /* empty */

    8 identMore: comma identifier identMore
    9          | /* empty */

   10 statements: statement semicolon statements
   11           | /* empty */

   12 statement: continue
   13          | write Var Vars
   14          | read Var Vars
   15          | do beginloop statement semicolon statements endloop while bool_exp
   16          | while bool_exp beginloop statement semicolon statements endloop
   17          | if bool_exp then statement semicolon statements statement1 endif
   18          | Var assign expression

   19 statement1: else statement semicolon statements
   20           | /* empty */

   21 Vars: comma Var Vars
   22     | /* empty */

   23 Var: identifier var2

   24 var2: left_paren expression right_paren
   25     | /* empty */

   26 bool_exp: relation_and_exp relation_or

   27 relation_and_exp: relation_exp relation_and

   28 relation_or: or relation_and_exp relation_or
   29            | /* empty */

   30 relation_and: and relation_exp relation_and
   31             | /* empty */

   32 relation_exp: not relation_exp2
   33             | relation_exp2

   34 relation_exp2: expression comp expression
   35              | true
   36              | false
   37              | left_paren bool_exp right_paren

   38 expression: multplicative_exp moreMultExp

   39 multplicative_exp: term term1

   40 term: minus term2
   41     | term2

   42 term1: mult term term1
   43      | div term term1
   44      | mod term term1
   45      | /* empty */

   46 term2: Var
   47      | number
   48      | left_paren expression right_paren

   49 moreMultExp: plus multplicative_exp moreMultExp
   50            | minus multplicative_exp moreMultExp
   51            | /* empty */

   52 program: PROGRAM

   53 identifier: IDENT

   54 semicolon: SEMICOLON

   55 beginprogram: BEGIN_PROGRAM

   56 endprogram: END_PROGRAM

   57 colon: COLON

   58 array: ARRAY

   59 left_paren: L_PAREN

   60 number: NUMBER

   61 right_paren: R_PAREN

   62 of: OF

   63 integer: INTEGER

   64 comma: COMMA

   65 continue: CONTINUE

   66 write: WRITE

   67 read: READ

   68 do: DO

   69 beginloop: BEGINLOOP

   70 endloop: ENDLOOP

   71 while: WHILE

   72 if: IF

   73 then: THEN

   74 else: ELSE

   75 endif: ENDIF

   76 assign: ASSIGN

   77 and: AND

   78 or: OR

   79 true: TRUE

   80 false: FALSE

   81 not: NOT

   82 comp: EQ
   83     | NEQ
   84     | LT
   85     | GT
   86     | LTE
   87     | GTE

   88 mult: MULT

   89 div: DIV

   90 mod: MOD

   91 plus: ADD

   92 minus: SUB


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 52
BEGIN_PROGRAM (259) 55
END_PROGRAM (260) 56
INTEGER (261) 63
ARRAY (262) 58
OF (263) 62
IF (264) 72
THEN (265) 73
ELSE (266) 74
ENDIF (267) 75
ELSEIF (268)
WHILE (269) 71
DO (270) 68
BEGINLOOP (271) 69
ENDLOOP (272) 70
BREAK (273)
CONTINUE (274) 65
END (275)
EXIT (276)
READ (277) 67
WRITE (278) 66
NOT (279) 81
TRUE (280) 79
FALSE (281) 80
SEMICOLON (282) 54
COLON (283) 57
COMMA (284) 64
QUESTION (285)
L_BRACKET (286)
R_BRACKET (287)
ASSIGN (288) 76
NUMBER (289) 60
IDENT (290) 53
R_PAREN (291) 61
L_PAREN (292) 59
GTE (293) 87
LTE (294) 86
GT (295) 85
LT (296) 84
NEQ (297) 83
EQ (298) 82
MOD (299) 90
DIV (300) 89
MULT (301) 88
ADD (302) 91
SUB (303) 92
AND (304) 77
OR (305) 78
ELSE_PREC (306)
IF_PREC (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program_start (54)
    on left: 1, on right: 0
block (55)
    on left: 2, on right: 1
declarations (56)
    on left: 3 4, on right: 2 3
declaration (57)
    on left: 5, on right: 3
declaration2 (58)
    on left: 6 7, on right: 5
identMore (59)
    on left: 8 9, on right: 5 8
statements (60)
    on left: 10 11, on right: 2 10 15 16 17 19
statement (61)
    on left: 12 13 14 15 16 17 18, on right: 10 15 16 17 19
statement1 (62)
    on left: 19 20, on right: 17
Vars (63)
    on left: 21 22, on right: 13 14 21
Var (64)
    on left: 23, on right: 13 14 18 21 46
var2 (65)
    on left: 24 25, on right: 23
bool_exp (66)
    on left: 26, on right: 15 16 17 37
relation_and_exp (67)
    on left: 27, on right: 26 28
relation_or (68)
    on left: 28 29, on right: 26 28
relation_and (69)
    on left: 30 31, on right: 27 30
relation_exp (70)
    on left: 32 33, on right: 27 30
relation_exp2 (71)
    on left: 34 35 36 37, on right: 32 33
expression (72)
    on left: 38, on right: 18 24 34 48
multplicative_exp (73)
    on left: 39, on right: 38 49 50
term (74)
    on left: 40 41, on right: 39 42 43 44
term1 (75)
    on left: 42 43 44 45, on right: 39 42 43 44
term2 (76)
    on left: 46 47 48, on right: 40 41
moreMultExp (77)
    on left: 49 50 51, on right: 38 49 50
program (78)
    on left: 52, on right: 1
identifier (79)
    on left: 53, on right: 1 5 8 23
semicolon (80)
    on left: 54, on right: 1 3 10 15 16 17 19
beginprogram (81)
    on left: 55, on right: 2
endprogram (82)
    on left: 56, on right: 1
colon (83)
    on left: 57, on right: 5
array (84)
    on left: 58, on right: 6
left_paren (85)
    on left: 59, on right: 6 24 37 48
number (86)
    on left: 60, on right: 6 47
right_paren (87)
    on left: 61, on right: 6 24 37 48
of (88)
    on left: 62, on right: 6
integer (89)
    on left: 63, on right: 5
comma (90)
    on left: 64, on right: 8 21
continue (91)
    on left: 65, on right: 12
write (92)
    on left: 66, on right: 13
read (93)
    on left: 67, on right: 14
do (94)
    on left: 68, on right: 15
beginloop (95)
    on left: 69, on right: 15 16
endloop (96)
    on left: 70, on right: 15 16
while (97)
    on left: 71, on right: 15 16
if (98)
    on left: 72, on right: 17
then (99)
    on left: 73, on right: 17
else (100)
    on left: 74, on right: 19
endif (101)
    on left: 75, on right: 17
assign (102)
    on left: 76, on right: 18
and (103)
    on left: 77, on right: 30
or (104)
    on left: 78, on right: 28
true (105)
    on left: 79, on right: 35
false (106)
    on left: 80, on right: 36
not (107)
    on left: 81, on right: 32
comp (108)
    on left: 82 83 84 85 86 87, on right: 34
mult (109)
    on left: 88, on right: 42
div (110)
    on left: 89, on right: 43
mod (111)
    on left: 90, on right: 44
plus (112)
    on left: 91, on right: 49
minus (113)
    on left: 92, on right: 40 50


state 0

    0 $accept: . program_start $end

    PROGRAM  shift, and go to state 1

    program_start  go to state 2
    program        go to state 3


state 1

   52 program: PROGRAM .

    $default  reduce using rule 52 (program)


state 2

    0 $accept: program_start . $end

    $end  shift, and go to state 4


state 3

    1 program_start: program . identifier semicolon block endprogram

    IDENT  shift, and go to state 5

    identifier  go to state 6


state 4

    0 $accept: program_start $end .

    $default  accept


state 5

   53 identifier: IDENT .

    $default  reduce using rule 53 (identifier)


state 6

    1 program_start: program identifier . semicolon block endprogram

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 7

   54 semicolon: SEMICOLON .

    $default  reduce using rule 54 (semicolon)


state 8

    1 program_start: program identifier semicolon . block endprogram

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    block         go to state 9
    declarations  go to state 10
    declaration   go to state 11
    identifier    go to state 12


state 9

    1 program_start: program identifier semicolon block . endprogram

    END_PROGRAM  shift, and go to state 13

    endprogram  go to state 14


state 10

    2 block: declarations . beginprogram statements

    BEGIN_PROGRAM  shift, and go to state 15

    beginprogram  go to state 16


state 11

    3 declarations: declaration . semicolon declarations

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 17


state 12

    5 declaration: identifier . identMore colon declaration2 integer

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identMore)

    identMore  go to state 19
    comma      go to state 20


state 13

   56 endprogram: END_PROGRAM .

    $default  reduce using rule 56 (endprogram)


state 14

    1 program_start: program identifier semicolon block endprogram .

    $default  reduce using rule 1 (program_start)


state 15

   55 beginprogram: BEGIN_PROGRAM .

    $default  reduce using rule 55 (beginprogram)


state 16

    2 block: declarations beginprogram . statements

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 27
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 17

    3 declarations: declaration semicolon . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    declarations  go to state 37
    declaration   go to state 11
    identifier    go to state 12


state 18

   64 comma: COMMA .

    $default  reduce using rule 64 (comma)


state 19

    5 declaration: identifier identMore . colon declaration2 integer

    COLON  shift, and go to state 38

    colon  go to state 39


state 20

    8 identMore: comma . identifier identMore

    IDENT  shift, and go to state 5

    identifier  go to state 40


state 21

   72 if: IF .

    $default  reduce using rule 72 (if)


state 22

   71 while: WHILE .

    $default  reduce using rule 71 (while)


state 23

   68 do: DO .

    $default  reduce using rule 68 (do)


state 24

   65 continue: CONTINUE .

    $default  reduce using rule 65 (continue)


state 25

   67 read: READ .

    $default  reduce using rule 67 (read)


state 26

   66 write: WRITE .

    $default  reduce using rule 66 (write)


state 27

    2 block: declarations beginprogram statements .

    $default  reduce using rule 2 (block)


state 28

   10 statements: statement . semicolon statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 41


state 29

   18 statement: Var . assign expression

    ASSIGN  shift, and go to state 42

    assign  go to state 43


state 30

   23 Var: identifier . var2

    L_PAREN  shift, and go to state 44

    $default  reduce using rule 25 (var2)

    var2        go to state 45
    left_paren  go to state 46


state 31

   12 statement: continue .

    $default  reduce using rule 12 (statement)


state 32

   13 statement: write . Var Vars

    IDENT  shift, and go to state 5

    Var         go to state 47
    identifier  go to state 30


state 33

   14 statement: read . Var Vars

    IDENT  shift, and go to state 5

    Var         go to state 48
    identifier  go to state 30


state 34

   15 statement: do . beginloop statement semicolon statements endloop while bool_exp

    BEGINLOOP  shift, and go to state 49

    beginloop  go to state 50


state 35

   16 statement: while . bool_exp beginloop statement semicolon statements endloop

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    bool_exp           go to state 57
    relation_and_exp   go to state 58
    relation_exp       go to state 59
    relation_exp2      go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 36

   17 statement: if . bool_exp then statement semicolon statements statement1 endif

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    bool_exp           go to state 71
    relation_and_exp   go to state 58
    relation_exp       go to state 59
    relation_exp2      go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 37

    3 declarations: declaration semicolon declarations .

    $default  reduce using rule 3 (declarations)


state 38

   57 colon: COLON .

    $default  reduce using rule 57 (colon)


state 39

    5 declaration: identifier identMore colon . declaration2 integer

    ARRAY  shift, and go to state 72

    $default  reduce using rule 7 (declaration2)

    declaration2  go to state 73
    array         go to state 74


state 40

    8 identMore: comma identifier . identMore

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identMore)

    identMore  go to state 75
    comma      go to state 20


state 41

   10 statements: statement semicolon . statements

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 76
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 42

   76 assign: ASSIGN .

    $default  reduce using rule 76 (assign)


state 43

   18 statement: Var assign . expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    expression         go to state 77
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 44

   59 left_paren: L_PAREN .

    $default  reduce using rule 59 (left_paren)


state 45

   23 Var: identifier var2 .

    $default  reduce using rule 23 (Var)


state 46

   24 var2: left_paren . expression right_paren

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    expression         go to state 79
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 47

   13 statement: write Var . Vars

    COMMA  shift, and go to state 18

    $default  reduce using rule 22 (Vars)

    Vars   go to state 80
    comma  go to state 81


state 48

   14 statement: read Var . Vars

    COMMA  shift, and go to state 18

    $default  reduce using rule 22 (Vars)

    Vars   go to state 82
    comma  go to state 81


state 49

   69 beginloop: BEGINLOOP .

    $default  reduce using rule 69 (beginloop)


state 50

   15 statement: do beginloop . statement semicolon statements endloop while bool_exp

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    statement   go to state 83
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 51

   81 not: NOT .

    $default  reduce using rule 81 (not)


state 52

   79 true: TRUE .

    $default  reduce using rule 79 (true)


state 53

   80 false: FALSE .

    $default  reduce using rule 80 (false)


state 54

   60 number: NUMBER .

    $default  reduce using rule 60 (number)


state 55

   92 minus: SUB .

    $default  reduce using rule 92 (minus)


state 56

   46 term2: Var .

    $default  reduce using rule 46 (term2)


state 57

   16 statement: while bool_exp . beginloop statement semicolon statements endloop

    BEGINLOOP  shift, and go to state 49

    beginloop  go to state 84


state 58

   26 bool_exp: relation_and_exp . relation_or

    OR  shift, and go to state 85

    $default  reduce using rule 29 (relation_or)

    relation_or  go to state 86
    or           go to state 87


state 59

   27 relation_and_exp: relation_exp . relation_and

    AND  shift, and go to state 88

    $default  reduce using rule 31 (relation_and)

    relation_and  go to state 89
    and           go to state 90


state 60

   33 relation_exp: relation_exp2 .

    $default  reduce using rule 33 (relation_exp)


state 61

   34 relation_exp2: expression . comp expression

    GTE  shift, and go to state 91
    LTE  shift, and go to state 92
    GT   shift, and go to state 93
    LT   shift, and go to state 94
    NEQ  shift, and go to state 95
    EQ   shift, and go to state 96

    comp  go to state 97


state 62

   38 expression: multplicative_exp . moreMultExp

    ADD  shift, and go to state 98
    SUB  shift, and go to state 55

    $default  reduce using rule 51 (moreMultExp)

    moreMultExp  go to state 99
    plus         go to state 100
    minus        go to state 101


state 63

   39 multplicative_exp: term . term1

    MOD   shift, and go to state 102
    DIV   shift, and go to state 103
    MULT  shift, and go to state 104

    $default  reduce using rule 45 (term1)

    term1  go to state 105
    mult   go to state 106
    div    go to state 107
    mod    go to state 108


state 64

   41 term: term2 .

    $default  reduce using rule 41 (term)


state 65

   37 relation_exp2: left_paren . bool_exp right_paren
   48 term2: left_paren . expression right_paren

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    bool_exp           go to state 109
    relation_and_exp   go to state 58
    relation_exp       go to state 59
    relation_exp2      go to state 60
    expression         go to state 110
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 66

   47 term2: number .

    $default  reduce using rule 47 (term2)


state 67

   35 relation_exp2: true .

    $default  reduce using rule 35 (relation_exp2)


state 68

   36 relation_exp2: false .

    $default  reduce using rule 36 (relation_exp2)


state 69

   32 relation_exp: not . relation_exp2

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    relation_exp2      go to state 111
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    minus              go to state 70


state 70

   40 term: minus . term2

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44

    Var         go to state 56
    term2       go to state 112
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 66


state 71

   17 statement: if bool_exp . then statement semicolon statements statement1 endif

    THEN  shift, and go to state 113

    then  go to state 114


state 72

   58 array: ARRAY .

    $default  reduce using rule 58 (array)


state 73

    5 declaration: identifier identMore colon declaration2 . integer

    INTEGER  shift, and go to state 115

    integer  go to state 116


state 74

    6 declaration2: array . left_paren number right_paren of

    L_PAREN  shift, and go to state 44

    left_paren  go to state 117


state 75

    8 identMore: comma identifier identMore .

    $default  reduce using rule 8 (identMore)


state 76

   10 statements: statement semicolon statements .

    $default  reduce using rule 10 (statements)


state 77

   18 statement: Var assign expression .

    $default  reduce using rule 18 (statement)


state 78

   48 term2: left_paren . expression right_paren

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    expression         go to state 118
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 79

   24 var2: left_paren expression . right_paren

    R_PAREN  shift, and go to state 119

    right_paren  go to state 120


state 80

   13 statement: write Var Vars .

    $default  reduce using rule 13 (statement)


state 81

   21 Vars: comma . Var Vars

    IDENT  shift, and go to state 5

    Var         go to state 121
    identifier  go to state 30


state 82

   14 statement: read Var Vars .

    $default  reduce using rule 14 (statement)


state 83

   15 statement: do beginloop statement . semicolon statements endloop while bool_exp

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 122


state 84

   16 statement: while bool_exp beginloop . statement semicolon statements endloop

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    statement   go to state 123
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 85

   78 or: OR .

    $default  reduce using rule 78 (or)


state 86

   26 bool_exp: relation_and_exp relation_or .

    $default  reduce using rule 26 (bool_exp)


state 87

   28 relation_or: or . relation_and_exp relation_or

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    relation_and_exp   go to state 124
    relation_exp       go to state 59
    relation_exp2      go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 88

   77 and: AND .

    $default  reduce using rule 77 (and)


state 89

   27 relation_and_exp: relation_exp relation_and .

    $default  reduce using rule 27 (relation_and_exp)


state 90

   30 relation_and: and . relation_exp relation_and

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    relation_exp       go to state 125
    relation_exp2      go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 91

   87 comp: GTE .

    $default  reduce using rule 87 (comp)


state 92

   86 comp: LTE .

    $default  reduce using rule 86 (comp)


state 93

   85 comp: GT .

    $default  reduce using rule 85 (comp)


state 94

   84 comp: LT .

    $default  reduce using rule 84 (comp)


state 95

   83 comp: NEQ .

    $default  reduce using rule 83 (comp)


state 96

   82 comp: EQ .

    $default  reduce using rule 82 (comp)


state 97

   34 relation_exp2: expression comp . expression

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    expression         go to state 126
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 98

   91 plus: ADD .

    $default  reduce using rule 91 (plus)


state 99

   38 expression: multplicative_exp moreMultExp .

    $default  reduce using rule 38 (expression)


state 100

   49 moreMultExp: plus . multplicative_exp moreMultExp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    multplicative_exp  go to state 127
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 101

   50 moreMultExp: minus . multplicative_exp moreMultExp

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    multplicative_exp  go to state 128
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 78
    number             go to state 66
    minus              go to state 70


state 102

   90 mod: MOD .

    $default  reduce using rule 90 (mod)


state 103

   89 div: DIV .

    $default  reduce using rule 89 (div)


state 104

   88 mult: MULT .

    $default  reduce using rule 88 (mult)


state 105

   39 multplicative_exp: term term1 .

    $default  reduce using rule 39 (multplicative_exp)


state 106

   42 term1: mult . term term1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var         go to state 56
    term        go to state 129
    term2       go to state 64
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 66
    minus       go to state 70


state 107

   43 term1: div . term term1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var         go to state 56
    term        go to state 130
    term2       go to state 64
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 66
    minus       go to state 70


state 108

   44 term1: mod . term term1

    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var         go to state 56
    term        go to state 131
    term2       go to state 64
    identifier  go to state 30
    left_paren  go to state 78
    number      go to state 66
    minus       go to state 70


state 109

   37 relation_exp2: left_paren bool_exp . right_paren

    R_PAREN  shift, and go to state 119

    right_paren  go to state 132


state 110

   34 relation_exp2: expression . comp expression
   48 term2: left_paren expression . right_paren

    R_PAREN  shift, and go to state 119
    GTE      shift, and go to state 91
    LTE      shift, and go to state 92
    GT       shift, and go to state 93
    LT       shift, and go to state 94
    NEQ      shift, and go to state 95
    EQ       shift, and go to state 96

    right_paren  go to state 133
    comp         go to state 97


state 111

   32 relation_exp: not relation_exp2 .

    $default  reduce using rule 32 (relation_exp)


state 112

   40 term: minus term2 .

    $default  reduce using rule 40 (term)


state 113

   73 then: THEN .

    $default  reduce using rule 73 (then)


state 114

   17 statement: if bool_exp then . statement semicolon statements statement1 endif

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    statement   go to state 134
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 115

   63 integer: INTEGER .

    $default  reduce using rule 63 (integer)


state 116

    5 declaration: identifier identMore colon declaration2 integer .

    $default  reduce using rule 5 (declaration)


state 117

    6 declaration2: array left_paren . number right_paren of

    NUMBER  shift, and go to state 54

    number  go to state 135


state 118

   48 term2: left_paren expression . right_paren

    R_PAREN  shift, and go to state 119

    right_paren  go to state 133


state 119

   61 right_paren: R_PAREN .

    $default  reduce using rule 61 (right_paren)


state 120

   24 var2: left_paren expression right_paren .

    $default  reduce using rule 24 (var2)


state 121

   21 Vars: comma Var . Vars

    COMMA  shift, and go to state 18

    $default  reduce using rule 22 (Vars)

    Vars   go to state 136
    comma  go to state 81


state 122

   15 statement: do beginloop statement semicolon . statements endloop while bool_exp

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 137
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 123

   16 statement: while bool_exp beginloop statement . semicolon statements endloop

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 138


state 124

   28 relation_or: or relation_and_exp . relation_or

    OR  shift, and go to state 85

    $default  reduce using rule 29 (relation_or)

    relation_or  go to state 139
    or           go to state 87


state 125

   30 relation_and: and relation_exp . relation_and

    AND  shift, and go to state 88

    $default  reduce using rule 31 (relation_and)

    relation_and  go to state 140
    and           go to state 90


state 126

   34 relation_exp2: expression comp expression .

    $default  reduce using rule 34 (relation_exp2)


state 127

   49 moreMultExp: plus multplicative_exp . moreMultExp

    ADD  shift, and go to state 98
    SUB  shift, and go to state 55

    $default  reduce using rule 51 (moreMultExp)

    moreMultExp  go to state 141
    plus         go to state 100
    minus        go to state 101


state 128

   50 moreMultExp: minus multplicative_exp . moreMultExp

    ADD  shift, and go to state 98
    SUB  shift, and go to state 55

    $default  reduce using rule 51 (moreMultExp)

    moreMultExp  go to state 142
    plus         go to state 100
    minus        go to state 101


state 129

   42 term1: mult term . term1

    MOD   shift, and go to state 102
    DIV   shift, and go to state 103
    MULT  shift, and go to state 104

    $default  reduce using rule 45 (term1)

    term1  go to state 143
    mult   go to state 106
    div    go to state 107
    mod    go to state 108


state 130

   43 term1: div term . term1

    MOD   shift, and go to state 102
    DIV   shift, and go to state 103
    MULT  shift, and go to state 104

    $default  reduce using rule 45 (term1)

    term1  go to state 144
    mult   go to state 106
    div    go to state 107
    mod    go to state 108


state 131

   44 term1: mod term . term1

    MOD   shift, and go to state 102
    DIV   shift, and go to state 103
    MULT  shift, and go to state 104

    $default  reduce using rule 45 (term1)

    term1  go to state 145
    mult   go to state 106
    div    go to state 107
    mod    go to state 108


state 132

   37 relation_exp2: left_paren bool_exp right_paren .

    $default  reduce using rule 37 (relation_exp2)


state 133

   48 term2: left_paren expression right_paren .

    $default  reduce using rule 48 (term2)


state 134

   17 statement: if bool_exp then statement . semicolon statements statement1 endif

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 146


state 135

    6 declaration2: array left_paren number . right_paren of

    R_PAREN  shift, and go to state 119

    right_paren  go to state 147


state 136

   21 Vars: comma Var Vars .

    $default  reduce using rule 21 (Vars)


state 137

   15 statement: do beginloop statement semicolon statements . endloop while bool_exp

    ENDLOOP  shift, and go to state 148

    endloop  go to state 149


state 138

   16 statement: while bool_exp beginloop statement semicolon . statements endloop

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 150
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 139

   28 relation_or: or relation_and_exp relation_or .

    $default  reduce using rule 28 (relation_or)


state 140

   30 relation_and: and relation_exp relation_and .

    $default  reduce using rule 30 (relation_and)


state 141

   49 moreMultExp: plus multplicative_exp moreMultExp .

    $default  reduce using rule 49 (moreMultExp)


state 142

   50 moreMultExp: minus multplicative_exp moreMultExp .

    $default  reduce using rule 50 (moreMultExp)


state 143

   42 term1: mult term term1 .

    $default  reduce using rule 42 (term1)


state 144

   43 term1: div term term1 .

    $default  reduce using rule 43 (term1)


state 145

   44 term1: mod term term1 .

    $default  reduce using rule 44 (term1)


state 146

   17 statement: if bool_exp then statement semicolon . statements statement1 endif

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 151
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 147

    6 declaration2: array left_paren number right_paren . of

    OF  shift, and go to state 152

    of  go to state 153


state 148

   70 endloop: ENDLOOP .

    $default  reduce using rule 70 (endloop)


state 149

   15 statement: do beginloop statement semicolon statements endloop . while bool_exp

    WHILE  shift, and go to state 22

    while  go to state 154


state 150

   16 statement: while bool_exp beginloop statement semicolon statements . endloop

    ENDLOOP  shift, and go to state 148

    endloop  go to state 155


state 151

   17 statement: if bool_exp then statement semicolon statements . statement1 endif

    ELSE  shift, and go to state 156

    $default  reduce using rule 20 (statement1)

    statement1  go to state 157
    else        go to state 158


state 152

   62 of: OF .

    $default  reduce using rule 62 (of)


state 153

    6 declaration2: array left_paren number right_paren of .

    $default  reduce using rule 6 (declaration2)


state 154

   15 statement: do beginloop statement semicolon statements endloop while . bool_exp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 44
    SUB      shift, and go to state 55

    Var                go to state 56
    bool_exp           go to state 159
    relation_and_exp   go to state 58
    relation_exp       go to state 59
    relation_exp2      go to state 60
    expression         go to state 61
    multplicative_exp  go to state 62
    term               go to state 63
    term2              go to state 64
    identifier         go to state 30
    left_paren         go to state 65
    number             go to state 66
    true               go to state 67
    false              go to state 68
    not                go to state 69
    minus              go to state 70


state 155

   16 statement: while bool_exp beginloop statement semicolon statements endloop .

    $default  reduce using rule 16 (statement)


state 156

   74 else: ELSE .

    $default  reduce using rule 74 (else)


state 157

   17 statement: if bool_exp then statement semicolon statements statement1 . endif

    ENDIF  shift, and go to state 160

    endif  go to state 161


state 158

   19 statement1: else . statement semicolon statements

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    statement   go to state 162
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 159

   15 statement: do beginloop statement semicolon statements endloop while bool_exp .

    $default  reduce using rule 15 (statement)


state 160

   75 endif: ENDIF .

    $default  reduce using rule 75 (endif)


state 161

   17 statement: if bool_exp then statement semicolon statements statement1 endif .

    $default  reduce using rule 17 (statement)


state 162

   19 statement1: else statement . semicolon statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 163


state 163

   19 statement1: else statement semicolon . statements

    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    DO        shift, and go to state 23
    CONTINUE  shift, and go to state 24
    READ      shift, and go to state 25
    WRITE     shift, and go to state 26
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (statements)

    statements  go to state 164
    statement   go to state 28
    Var         go to state 29
    identifier  go to state 30
    continue    go to state 31
    write       go to state 32
    read        go to state 33
    do          go to state 34
    while       go to state 35
    if          go to state 36


state 164

   19 statement1: else statement semicolon statements .

    $default  reduce using rule 19 (statement1)
