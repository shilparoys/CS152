program -> PROGRAM
identifier -> IDENT (primes)
semicolon -> SEMICOLON
identifier -> IDENT (n)
identMore -> epsilon
colon -> COLON
declaration2 -> epsilon
integer -> INTEGER
declaration -> identifier identMore colon declaration2 integer
semicolon -> SEMICOLON
identifier -> IDENT (a)
identMore -> epsilon
colon -> COLON
array -> ARRAY
l_paren -> L_PAREN
number -> NUMBER(1000)
r_paren -> R_PAREN
of-> OF
declaration2 -> array left_paren number right_paren of
integer -> INTEGER
declaration -> identifier identMore colon declaration2 integer
semicolon -> SEMICOLON
identifier -> IDENT (i)
comma -> COMMA
identifier -> IDENT (j)
identMore -> epsilon
identMore -> comma identifier indentMore
colon -> COLON
declaration2 -> epsilon
integer -> INTEGER
declaration -> identifier identMore colon declaration2 integer
semicolon -> SEMICOLON
identifier -> IDENT (x)
comma -> COMMA
identifier -> IDENT (sqrt_n)
identMore -> epsilon
identMore -> comma identifier indentMore
colon -> COLON
declaration2 -> epsilon
integer -> INTEGER
declaration -> identifier identMore colon declaration2 integer
semicolon -> SEMICOLON
declarations -> epsilon
declarations -> declaration semicolon declarations
declarations -> declaration semicolon declarations
declarations -> declaration semicolon declarations
declarations -> declaration semicolon declarations
begin_program -> BEGIN_PROGRAM
read -> READ
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
Vars -> epsilon
statement -> read Var Vars
semicolon -> SEMICOLON
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
while -> WHILE
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> GT
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
div -> DIV
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
term1 -> div term term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
beginloop -> BEGINLOOP
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
l_paren -> L_PAREN
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
div -> DIV
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
term1 -> div term term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
r_paren -> R_PAREN
term2 -> left_paren expression right_paren
term -> term2
div -> DIV
number -> NUMBER(2)
term2 -> number
term -> term2
term1 -> epsilon term1
term1 -> div term term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
statements -> epsilon
endloop -> ENDLOOP
statement -> while bool_exp beginloop statement semicolon statements endloop
semicolon -> SEMICOLON
identifier -> IDENT (sqrt_n)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (x)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
number -> NUMBER(2)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
while -> WHILE
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> LTE
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
beginloop -> BEGINLOOP
identifier -> IDENT (a)
l_paren -> L_PAREN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
r_paren -> R_PAREN
var2 -> left_paren expression right_paren
Var -> identifier var2
assign -> ASSIGN
number -> NUMBER(0)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
number -> NUMBER(1)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
endloop -> ENDLOOP
statement -> while bool_exp beginloop statement semicolon statements endloop
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
number -> NUMBER(2)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
while -> WHILE
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> LTE
identifier -> IDENT (sqrt_n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
beginloop -> BEGINLOOP
if -> IF
identifier -> IDENT (a)
l_paren -> L_PAREN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
r_paren -> R_PAREN
var2 -> left_paren expression right_paren
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> EQ
number -> NUMBER(0)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
then -> THEN
identifier -> IDENT (j)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
while -> WHILE
identifier -> IDENT (j)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> LTE
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
beginloop -> BEGINLOOP
identifier -> IDENT (a)
l_paren -> L_PAREN
identifier -> IDENT (j)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
r_paren -> R_PAREN
var2 -> left_paren expression right_paren
Var -> identifier var2
assign -> ASSIGN
number -> NUMBER(1)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
identifier -> IDENT (j)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (j)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
endloop -> ENDLOOP
statement -> while bool_exp beginloop statement semicolon statements endloop
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
statement1 -> epsilon
endif -> ENDIF
statement -> if bool_exp then statement semicolon statements statement1 endif
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
number -> NUMBER(1)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
endloop -> ENDLOOP
statement -> while bool_exp beginloop statement semicolon statements endloop
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
number -> NUMBER(2)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
while -> WHILE
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> LTE
identifier -> IDENT (n)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
beginloop -> BEGINLOOP
if -> IF
identifier -> IDENT (a)
l_paren -> L_PAREN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
r_paren -> R_PAREN
var2 -> left_paren expression right_paren
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
comp -> EQ
number -> NUMBER(0)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
expression -> multiplicative_exp moreMultExp
relation_exp2 -> expression comp expression
relation_exp -> relation_exp2
relation_and -> epsilon
relation_and_exp -> relation_exp relation_and
relation_or -> epsilon
bool_exp -> relation_and_exp relation_or 
then -> THEN
write -> WRITE
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
Vars -> epsilon
statement -> write Var Vars
semicolon -> SEMICOLON
statements -> epsilon
statement1 -> epsilon
endif -> ENDIF
statement -> if bool_exp then statement semicolon statements statement1 endif
semicolon -> SEMICOLON
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
assign -> ASSIGN
identifier -> IDENT (i)
var2 -> epsilon
Var -> identifier var2
term2 -> Var
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
add -> ADD
number -> NUMBER(1)
term2 -> number
term -> term2
term1 -> epsilon term1
multplicative_exp -> term term1
moreMultExp -> epsilon
moreMultExp -> plus multplicative_exp moreMultExp
expression -> multiplicative_exp moreMultExp
statement -> Var assign expression
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
endloop -> ENDLOOP
statement -> while bool_exp beginloop statement semicolon statements endloop
semicolon -> SEMICOLON
statements -> epsilon
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
statements -> statement semicolon statements
block -> declarations beginprogram statements
end_program -> END_PROGRAM
program_start -> program identifier semicolon block endprogram
